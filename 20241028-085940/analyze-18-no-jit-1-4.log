query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184230.08..184230.72 rows=1 width=236) (actual time=1834.412..1836.346 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184230.08..184233.90 rows=6 width=236) (actual time=1834.411..1836.344 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184230.08..184232.95 rows=24 width=236) (actual time=1834.376..1836.313 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183230.02..183230.04 rows=6 width=236) (actual time=1827.019..1827.020 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183229.81..183229.94 rows=6 width=236) (actual time=1826.969..1826.974 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=1483328 width=25) (actual time=1.034..495.294 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 20.235 ms
 Execution Time: 1837.306 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184230.08..184230.72 rows=1 width=236) (actual time=1635.320..1635.741 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184230.08..184233.90 rows=6 width=236) (actual time=1635.318..1635.740 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184230.08..184232.95 rows=24 width=236) (actual time=1635.284..1635.708 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183230.02..183230.04 rows=6 width=236) (actual time=1629.964..1629.965 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183229.81..183229.94 rows=6 width=236) (actual time=1629.918..1629.923 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=1483328 width=25) (actual time=0.029..258.197 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.200 ms
 Execution Time: 1635.867 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16847.57..16847.58 rows=1 width=192) (actual time=170.650..170.663 rows=100 loops=1)
   ->  Sort  (cost=16847.57..16847.58 rows=1 width=192) (actual time=170.649..170.656 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..16847.56 rows=1 width=192) (actual time=4.565..170.226 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.364..0.370 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.175..0.176 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.184..0.186 rows=25 loops=1)
               ->  Materialize  (cost=14.58..16844.86 rows=1 width=170) (actual time=0.372..33.880 rows=489 loops=5)
                     Storage: Memory  Maximum Storage: 113kB
                     ->  Nested Loop  (cost=14.58..16844.86 rows=1 width=170) (actual time=1.847..168.573 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..16843.59 rows=1 width=34) (actual time=1.326..126.075 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.67 rows=725 width=30) (actual time=0.259..25.978 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.72 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.121..0.121 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.108..0.119 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.088..0.116 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.085..0.108 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.080..0.082 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.086..0.086 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 24.074 ms
 Execution Time: 170.815 ms
(48 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16847.57..16847.58 rows=1 width=192) (actual time=26.817..26.831 rows=100 loops=1)
   ->  Sort  (cost=16847.57..16847.58 rows=1 width=192) (actual time=26.816..26.823 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..16847.56 rows=1 width=192) (actual time=0.226..26.460 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.019..0.025 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=1)
               ->  Materialize  (cost=14.58..16844.86 rows=1 width=170) (actual time=0.020..5.226 rows=489 loops=5)
                     Storage: Memory  Maximum Storage: 113kB
                     ->  Nested Loop  (cost=14.58..16844.86 rows=1 width=170) (actual time=0.095..25.681 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..16843.59 rows=1 width=34) (actual time=0.082..24.469 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.67 rows=725 width=30) (actual time=0.015..8.698 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.72 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.017..0.018 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.013..0.016 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.428 ms
 Execution Time: 26.962 ms
(48 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233455.88..233455.91 rows=10 width=44) (actual time=1140.978..1143.289 rows=10 loops=1)
   ->  Sort  (cost=233455.88..234247.73 rows=316737 width=44) (actual time=1140.977..1143.286 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179976.65..226611.31 rows=316737 width=44) (actual time=1120.075..1141.108 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179976.65..217901.04 rows=316737 width=24) (actual time=1120.062..1126.621 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178976.60..179174.56 rows=79184 width=24) (actual time=1104.886..1105.150 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 451kB
                           Worker 0:  Sort Method: quicksort  Memory: 480kB
                           Worker 1:  Sort Method: quicksort  Memory: 475kB
                           Worker 2:  Sort Method: quicksort  Memory: 473kB
                           Worker 3:  Sort Method: quicksort  Memory: 456kB
                           ->  Parallel Hash Join  (cost=37912.27..172533.82 rows=79184 width=24) (actual time=228.081..1102.213 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=814088 width=16) (actual time=0.513..807.125 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37323.96..37323.96 rows=47065 width=12) (actual time=226.336..226.339 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4537.15..37323.96 rows=47065 width=12) (actual time=23.574..217.902 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231391 width=16) (actual time=0.611..166.135 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12712 width=4) (actual time=22.832..22.833 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12712 width=4) (actual time=0.316..21.228 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 28.880 ms
 Execution Time: 1143.464 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233455.88..233455.91 rows=10 width=44) (actual time=420.173..421.480 rows=10 loops=1)
   ->  Sort  (cost=233455.88..234247.73 rows=316737 width=44) (actual time=420.172..421.478 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179976.65..226611.31 rows=316737 width=44) (actual time=399.373..419.305 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179976.65..217901.04 rows=316737 width=24) (actual time=399.360..404.866 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178976.60..179174.56 rows=79184 width=24) (actual time=394.777..395.040 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 396kB
                           Worker 0:  Sort Method: quicksort  Memory: 456kB
                           Worker 1:  Sort Method: quicksort  Memory: 536kB
                           Worker 2:  Sort Method: quicksort  Memory: 404kB
                           Worker 3:  Sort Method: quicksort  Memory: 542kB
                           ->  Parallel Hash Join  (cost=37912.27..172533.82 rows=79184 width=24) (actual time=91.964..391.994 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=814088 width=16) (actual time=0.059..225.839 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37323.96..37323.96 rows=47065 width=12) (actual time=91.065..91.068 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4537.15..37323.96 rows=47065 width=12) (actual time=9.088..78.516 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231391 width=16) (actual time=0.016..44.553 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12712 width=4) (actual time=7.515..7.516 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12712 width=4) (actual time=0.014..5.447 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.961 ms
 Execution Time: 421.642 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29375.51..53095.74 rows=1 width=24) (actual time=1043.334..1048.296 rows=1 loops=1)
   ->  GroupAggregate  (cost=29375.51..147976.63 rows=5 width=24) (actual time=1043.333..1048.294 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29375.51..147694.17 rows=56483 width=16) (actual time=421.472..1043.594 rows=10479 loops=1)
               ->  Gather Merge  (cost=29375.08..36057.39 rows=56483 width=20) (actual time=421.115..433.329 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28375.04..28420.59 rows=18220 width=20) (actual time=414.677..415.110 rows=3773 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 926kB
                           Worker 0:  Sort Method: quicksort  Memory: 942kB
                           Worker 1:  Sort Method: quicksort  Memory: 932kB
                           Worker 2:  Sort Method: quicksort  Memory: 925kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=681.38..27085.68 rows=18220 width=20) (actual time=5.806..408.857 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5748
                                 Worker 0:  Heap Blocks: exact=5860
                                 Worker 1:  Heap Blocks: exact=5811
                                 Worker 2:  Heap Blocks: exact=5767
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..667.26 rows=56483 width=0) (actual time=7.184..7.185 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 21.625 ms
 Execution Time: 1049.260 ms
(26 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29375.51..53095.74 rows=1 width=24) (actual time=63.281..68.861 rows=1 loops=1)
   ->  GroupAggregate  (cost=29375.51..147976.63 rows=5 width=24) (actual time=63.280..68.859 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29375.51..147694.17 rows=56483 width=16) (actual time=33.407..67.582 rows=10479 loops=1)
               ->  Gather Merge  (cost=29375.08..36057.39 rows=56483 width=20) (actual time=33.377..41.531 rows=11388 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28375.04..28420.59 rows=18220 width=20) (actual time=30.113..30.357 rows=3818 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 938kB
                           Worker 0:  Sort Method: quicksort  Memory: 929kB
                           Worker 1:  Sort Method: quicksort  Memory: 929kB
                           Worker 2:  Sort Method: quicksort  Memory: 928kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=681.38..27085.68 rows=18220 width=20) (actual time=6.137..26.521 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5856
                                 Worker 0:  Heap Blocks: exact=5820
                                 Worker 1:  Heap Blocks: exact=5742
                                 Worker 2:  Heap Blocks: exact=5768
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..667.26 rows=56483 width=0) (actual time=5.327..5.327 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11388)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.575 ms
 Execution Time: 69.022 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71724.09..71724.10 rows=1 width=58) (actual time=760.742..767.855 rows=1 loops=1)
   ->  Sort  (cost=71724.09..71724.16 rows=25 width=58) (actual time=760.740..767.853 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71684.19..71723.97 rows=25 width=58) (actual time=760.280..767.826 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71684.19..71723.07 rows=78 width=58) (actual time=760.080..767.808 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70684.15..70713.87 rows=25 width=58) (actual time=752.552..753.166 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70684.15..70690.03 rows=2352 width=38) (actual time=752.395..752.480 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 148kB
                                 Worker 0:  Sort Method: quicksort  Memory: 150kB
                                 Worker 1:  Sort Method: quicksort  Memory: 154kB
                                 Worker 2:  Sort Method: quicksort  Memory: 154kB
                                 ->  Hash Join  (cost=7962.93..70552.45 rows=2352 width=38) (actual time=52.332..750.998 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7489.93..69769.70 rows=58999 width=50) (actual time=48.613..735.670 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7489.50..35064.48 rows=14747 width=38) (actual time=48.183..534.757 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2749.36..29986.39 rows=73735 width=8) (actual time=19.867..482.622 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6377
                                                         Worker 0:  Heap Blocks: exact=6468
                                                         Worker 1:  Heap Blocks: exact=6668
                                                         Worker 2:  Heap Blocks: exact=6614
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2692.22 rows=228579 width=0) (actual time=15.790..15.790 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=28.178..28.181 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.371..25.918 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.218..21.401 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.131..0.133 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.122..0.128 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.049..0.051 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.016..0.017 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.551..3.551 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.124..2.025 rows=10000 loops=4)
 Planning Time: 33.611 ms
 Execution Time: 768.108 ms
(53 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71724.09..71724.10 rows=1 width=58) (actual time=127.883..137.281 rows=1 loops=1)
   ->  Sort  (cost=71724.09..71724.16 rows=25 width=58) (actual time=127.882..137.279 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71684.19..71723.97 rows=25 width=58) (actual time=127.374..137.257 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71684.19..71723.07 rows=78 width=58) (actual time=127.205..137.238 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70684.15..70713.87 rows=25 width=58) (actual time=123.257..123.871 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70684.15..70690.03 rows=2352 width=38) (actual time=123.101..123.188 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 154kB
                                 Worker 0:  Sort Method: quicksort  Memory: 153kB
                                 Worker 1:  Sort Method: quicksort  Memory: 148kB
                                 Worker 2:  Sort Method: quicksort  Memory: 152kB
                                 ->  Hash Join  (cost=7962.93..70552.45 rows=2352 width=38) (actual time=30.332..122.278 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7489.93..69769.70 rows=58999 width=50) (actual time=27.244..111.655 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7489.50..35064.48 rows=14747 width=38) (actual time=27.200..66.841 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2749.36..29986.39 rows=73735 width=8) (actual time=16.250..42.372 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6570
                                                         Worker 0:  Heap Blocks: exact=6557
                                                         Worker 1:  Heap Blocks: exact=6559
                                                         Worker 2:  Heap Blocks: exact=6441
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2692.22 rows=228579 width=0) (actual time=12.539..12.539 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=10.821..10.824 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.093..8.934 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.538 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.065..0.067 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.057..0.062 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.015..0.016 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.936..2.938 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.017..1.429 rows=10000 loops=4)
 Planning Time: 6.007 ms
 Execution Time: 137.476 ms
(53 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116238.26..116238.27 rows=1 width=32) (actual time=1069.971..1076.353 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116238.26..116238.27 rows=1 width=32) (actual time=1069.970..1076.351 rows=1 loops=1)
         ->  Gather  (cost=116237.83..116238.24 rows=4 width=32) (actual time=1069.449..1076.338 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115237.83..115237.84 rows=1 width=32) (actual time=1063.342..1063.344 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23038.54..115087.45 rows=30075 width=12) (actual time=129.737..1047.546 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13635
                           Worker 0:  Heap Blocks: exact=13230
                           Worker 1:  Heap Blocks: exact=13046
                           Worker 2:  Heap Blocks: exact=13239
                           Worker 3:  Heap Blocks: exact=12993
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23008.46 rows=120301 width=0) (actual time=123.620..123.621 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 18.686 ms
 Execution Time: 1077.262 ms
(17 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116238.26..116238.27 rows=1 width=32) (actual time=189.163..193.749 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116238.26..116238.27 rows=1 width=32) (actual time=189.161..193.746 rows=1 loops=1)
         ->  Gather  (cost=116237.83..116238.24 rows=4 width=32) (actual time=185.165..193.726 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115237.83..115237.84 rows=1 width=32) (actual time=181.824..181.824 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=23038.54..115087.45 rows=30075 width=12) (actual time=101.124..175.232 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12853
                           Worker 0:  Heap Blocks: exact=10588
                           Worker 1:  Heap Blocks: exact=16079
                           Worker 2:  Heap Blocks: exact=11224
                           Worker 3:  Heap Blocks: exact=15399
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23008.46 rows=120301 width=0) (actual time=92.353..92.353 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.076 ms
 Execution Time: 193.827 ms
(17 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141436.48..141595.10 rows=1 width=116) (actual time=3373.764..3377.381 rows=1 loops=1)
   ->  GroupAggregate  (cost=141436.48..1106162.54 rows=6082 width=116) (actual time=3373.763..3377.379 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141436.48..1105980.08 rows=6082 width=96) (actual time=927.463..3374.463 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32710
               ->  Nested Loop  (cost=141436.06..767602.37 rows=152058 width=76) (actual time=921.267..2900.321 rows=34069 loops=1)
                     ->  Gather Merge  (cost=141435.63..159642.24 rows=152058 width=76) (actual time=919.945..964.589 rows=34069 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140435.57..140530.61 rows=38014 width=76) (actual time=909.022..909.925 rows=7229 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3426kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3816kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3508kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3942kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3848kB
                                 ->  Hash Join  (cost=381.77..137543.80 rows=38014 width=76) (actual time=3.443..882.317 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.99 rows=458144 width=24) (actual time=0.547..834.584 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.876..2.880 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.202..2.708 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.099..1.523 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.085..0.086 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.075..0.081 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.053..0.054 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.056..0.056 rows=1 loops=34069)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=34069)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 33.460 ms
 Execution Time: 3377.750 ms
(47 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141436.48..141595.10 rows=1 width=116) (actual time=500.128..501.758 rows=1 loops=1)
   ->  GroupAggregate  (cost=141436.48..1106162.54 rows=6082 width=116) (actual time=500.127..501.756 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141436.48..1105980.08 rows=6082 width=96) (actual time=312.303..500.725 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32760
               ->  Nested Loop  (cost=141436.06..767602.37 rows=152058 width=76) (actual time=312.277..422.051 rows=34119 loops=1)
                     ->  Gather Merge  (cost=141435.63..159642.24 rows=152058 width=76) (actual time=312.233..331.630 rows=34119 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140435.57..140530.61 rows=38014 width=76) (actual time=302.840..303.486 rows=7230 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 2582kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4972kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5277kB
                                 Worker 2:  Sort Method: quicksort  Memory: 2824kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5188kB
                                 ->  Hash Join  (cost=381.77..137543.80 rows=38014 width=76) (actual time=2.136..277.001 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.99 rows=458144 width=24) (actual time=0.043..226.775 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.071..2.074 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.075..1.908 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.687 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.046..0.047 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.036..0.042 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.018..0.020 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.006..0.009 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34119)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34119)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 4.387 ms
 Execution Time: 502.046 ms
(47 rows)

query 8 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41775.17..41789.46 rows=1 width=64) (actual time=726.587..731.953 rows=1 loops=1)
   ->  GroupAggregate  (cost=41775.17..76164.29 rows=2406 width=64) (actual time=726.586..731.951 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41775.17..76067.35 rows=2441 width=70) (actual time=338.751..730.188 rows=1235 loops=1)
               ->  Nested Loop  (cost=41775.02..75972.50 rows=2441 width=20) (actual time=338.732..728.099 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41774.73..70902.88 rows=2448 width=20) (actual time=338.279..708.645 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4863
                           ->  Nested Loop  (cost=41774.73..70718.19 rows=12242 width=24) (actual time=338.069..705.601 rows=6098 loops=1)
                                 ->  Nested Loop  (cost=41774.59..70389.84 rows=12242 width=24) (actual time=337.709..698.428 rows=6098 loops=1)
                                       ->  Gather Merge  (cost=41774.17..43222.47 rows=12242 width=24) (actual time=337.270..346.859 rows=6098 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40774.13..40784.00 rows=3949 width=24) (actual time=330.112..330.311 rows=2218 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 256kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 254kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 251kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 264kB
                                                   ->  Parallel Hash Join  (cost=6578.47..40538.23 rows=3949 width=24) (actual time=120.661..328.372 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149553 width=12) (actual time=0.574..187.345 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6454.69..6454.69 rows=9902 width=20) (actual time=119.786..119.787 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6454.69 rows=9902 width=20) (actual time=0.645..116.045 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.72 rows=330 width=4) (actual time=0.340..10.349 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.92 rows=30 width=24) (actual time=0.257..0.316 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.057..0.057 rows=1 loops=6098)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=6098)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6073  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.019..0.019 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6098)
                                 Storage: Memory  Maximum Storage: 17kB
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.185..0.188 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.005..0.005 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 37.451 ms
 Execution Time: 732.177 ms
(58 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41775.17..41789.46 rows=1 width=64) (actual time=106.824..110.891 rows=1 loops=1)
   ->  GroupAggregate  (cost=41775.17..76164.29 rows=2406 width=64) (actual time=106.823..110.889 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41775.17..76067.35 rows=2441 width=70) (actual time=83.076..110.162 rows=1235 loops=1)
               ->  Nested Loop  (cost=41775.02..75972.50 rows=2441 width=20) (actual time=83.064..109.214 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41774.73..70902.88 rows=2448 width=20) (actual time=83.045..106.889 rows=1235 loops=1)
                           Join Filter: (n1.n_regionkey = region.r_regionkey)
                           Rows Removed by Join Filter: 4858
                           ->  Nested Loop  (cost=41774.73..70718.19 rows=12242 width=24) (actual time=82.979..105.334 rows=6093 loops=1)
                                 ->  Nested Loop  (cost=41774.59..70389.84 rows=12242 width=24) (actual time=82.953..102.547 rows=6093 loops=1)
                                       ->  Gather Merge  (cost=41774.17..43222.47 rows=12242 width=24) (actual time=82.925..88.958 rows=6093 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Sort  (cost=40774.13..40784.00 rows=3949 width=24) (actual time=79.753..79.861 rows=2166 loops=4)
                                                   Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                                   Sort Method: quicksort  Memory: 259kB
                                                   Worker 0:  Sort Method: quicksort  Memory: 253kB
                                                   Worker 1:  Sort Method: quicksort  Memory: 252kB
                                                   Worker 2:  Sort Method: quicksort  Memory: 261kB
                                                   ->  Parallel Hash Join  (cost=6578.47..40538.23 rows=3949 width=24) (actual time=12.058..78.310 rows=3024 loops=4)
                                                         Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149553 width=12) (actual time=0.010..49.701 rows=114316 loops=4)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 260684
                                                         ->  Parallel Hash  (cost=6454.69..6454.69 rows=9902 width=20) (actual time=11.894..11.896 rows=9924 loops=4)
                                                               Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                               ->  Nested Loop  (cost=0.85..6454.69 rows=9902 width=20) (actual time=0.059..9.503 rows=9924 loops=4)
                                                                     ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.72 rows=330 width=4) (actual time=0.029..5.401 rows=330 loops=4)
                                                                           Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                           Heap Fetches: 0
                                                                     ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.92 rows=30 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                                           Heap Fetches: 0
                                       ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6093)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                             Heap Fetches: 0
                                 ->  Memoize  (cost=0.15..1.17 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=6093)
                                       Cache Key: customer.c_nationkey
                                       Cache Mode: logical
                                       Hits: 6068  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 3kB
                                       ->  Index Scan using nation_pkey on nation n1  (cost=0.14..1.16 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25)
                                             Index Cond: (n_nationkey = customer.c_nationkey)
                           ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=6093)
                                 Storage: Memory  Maximum Storage: 17kB
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                       Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1235)
                     Cache Key: supplier.s_nationkey
                     Cache Mode: logical
                     Hits: 1210  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                           Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 6.453 ms
 Execution Time: 111.112 ms
(58 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63501.81..63516.26 rows=1 width=90) (actual time=1048.090..1054.991 rows=1 loops=1)
   ->  GroupAggregate  (cost=63501.81..932796.49 rows=60150 width=90) (actual time=1048.088..1054.988 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=63501.81..925549.25 rows=362571 width=81) (actual time=889.588..1052.154 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=63501.38..106395.87 rows=362571 width=63) (actual time=888.088..896.716 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=62501.34..62793.74 rows=116958 width=63) (actual time=877.627..877.730 rows=712 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 10328kB
                           Worker 0:  Sort Method: quicksort  Memory: 10142kB
                           Worker 1:  Sort Method: quicksort  Memory: 9947kB
                           Worker 2:  Sort Method: quicksort  Memory: 9882kB
                           ->  Hash Join  (cost=19135.53..52656.03 rows=116958 width=63) (actual time=557.386..766.879 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=19133.97..52295.41 rows=116958 width=41) (actual time=557.292..741.647 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.583..74.185 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=17671.99..17671.99 rows=116958 width=41) (actual time=555.964..555.967 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29632kB
                                             ->  Hash Join  (cost=448.85..17671.99 rows=116958 width=41) (actual time=3.917..521.560 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..16915.89 rows=117321 width=33) (actual time=0.589..498.100 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.123..17.552 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.81 rows=30 width=29) (actual time=0.147..0.173 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.251..3.252 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.125..1.904 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.074..0.075 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.064..0.067 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.126..0.126 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 41.587 ms
 Execution Time: 1055.500 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63501.81..63516.26 rows=1 width=90) (actual time=382.758..388.919 rows=1 loops=1)
   ->  GroupAggregate  (cost=63501.81..932796.49 rows=60150 width=90) (actual time=382.757..388.917 rows=1 loops=1)
         Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=63501.81..925549.25 rows=362571 width=81) (actual time=377.866..388.087 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=63501.38..106395.87 rows=362571 width=63) (actual time=377.818..384.584 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=62501.34..62793.74 rows=116958 width=63) (actual time=372.785..372.872 rows=750 loops=4)
                           Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
                           Sort Method: quicksort  Memory: 10024kB
                           Worker 0:  Sort Method: quicksort  Memory: 10057kB
                           Worker 1:  Sort Method: quicksort  Memory: 10099kB
                           Worker 2:  Sort Method: quicksort  Memory: 10120kB
                           ->  Hash Join  (cost=19135.53..52656.03 rows=116958 width=63) (actual time=99.686..262.407 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=19133.97..52295.41 rows=116958 width=41) (actual time=99.638..237.612 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.013..27.062 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=17671.99..17671.99 rows=116958 width=41) (actual time=98.944..98.947 rows=81482 loops=4)
                                             Buckets: 524288  Batches: 1  Memory Usage: 29632kB
                                             ->  Hash Join  (cost=448.85..17671.99 rows=116958 width=41) (actual time=2.694..68.693 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..16915.89 rows=117321 width=33) (actual time=0.073..48.770 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=3910 width=4) (actual time=0.046..11.058 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.81 rows=30 width=29) (actual time=0.005..0.011 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.551..2.551 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.239 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.030..0.030 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.021 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 8.500 ms
 Execution Time: 389.304 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81806.22..81806.27 rows=20 width=202) (actual time=708.714..713.390 rows=20 loops=1)
   ->  Sort  (cost=81806.22..81942.06 rows=54337 width=202) (actual time=708.712..713.386 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=79681.12..80360.33 rows=54337 width=202) (actual time=678.223..702.066 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6667.51..79001.90 rows=54337 width=182) (actual time=59.802..592.256 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5667.51..72568.20 rows=17528 width=182) (actual time=50.907..631.820 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5665.95..72512.83 rows=17528 width=160) (actual time=50.811..623.838 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=662.70..67463.57 rows=17528 width=16) (actual time=13.808..569.069 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=662.27..27059.44 rows=17745 width=8) (actual time=12.841..338.813 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4732
                                             Worker 0:  Heap Blocks: exact=6287
                                             Worker 1:  Heap Blocks: exact=6417
                                             Worker 2:  Heap Blocks: exact=5941
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..648.52 rows=55009 width=0) (actual time=9.030..9.030 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.015..0.015 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.584..36.585 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.139..16.179 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.083..0.084 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.063..0.068 rows=25 loops=4)
 Planning Time: 30.416 ms
 Execution Time: 714.395 ms
(34 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81806.22..81806.27 rows=20 width=202) (actual time=195.298..199.344 rows=20 loops=1)
   ->  Sort  (cost=81806.22..81942.06 rows=54337 width=202) (actual time=195.296..199.341 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=79681.12..80360.33 rows=54337 width=202) (actual time=164.650..188.023 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6667.51..79001.90 rows=54337 width=182) (actual time=41.323..90.799 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5667.51..72568.20 rows=17528 width=182) (actual time=38.245..129.740 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5665.95..72512.83 rows=17528 width=160) (actual time=38.204..123.808 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=662.70..67463.57 rows=17528 width=16) (actual time=10.668..83.396 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=662.27..27059.44 rows=17745 width=8) (actual time=10.590..28.193 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1895
                                             Worker 0:  Heap Blocks: exact=7195
                                             Worker 1:  Heap Blocks: exact=7155
                                             Worker 2:  Heap Blocks: exact=7132
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..648.52 rows=55009 width=0) (actual time=7.213..7.213 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.110..27.110 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.587 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.027 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.018 rows=25 loops=4)
 Planning Time: 2.431 ms
 Execution Time: 200.250 ms
(34 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17533.74..17533.74 rows=1 width=36) (actual time=713.468..713.574 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=7170.53..7170.55 rows=1 width=32) (actual time=24.722..24.825 rows=1 loops=1)
           ->  Gather  (cost=7170.31..7170.52 rows=2 width=32) (actual time=24.712..24.816 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6170.31..6170.32 rows=1 width=32) (actual time=19.666..19.667 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.71..6029.13 rows=18824 width=10) (actual time=0.134..15.993 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.29..578.65 rows=235 width=4) (actual time=0.117..2.850 rows=206 loops=2)
                                   Join Filter: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   Rows Removed by Join Filter: 4794
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.026..1.658 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Materialize  (cost=0.00..1.32 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=10000)
                                         Storage: Memory  Maximum Storage: 17kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.060..0.061 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.004..0.055 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10363.19..10389.86 rows=10667 width=36) (actual time=713.467..713.469 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=9829.86..10309.86 rows=10667 width=36) (actual time=702.899..713.304 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.86 rows=32000 width=14) (actual time=1.247..647.241 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.818..4.242 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.178..0.181 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.636..3.957 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.296..0.297 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.046..1.547 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 15.699 ms
 Execution Time: 714.558 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17533.74..17533.74 rows=1 width=36) (actual time=78.243..78.348 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=7170.53..7170.55 rows=1 width=32) (actual time=20.725..20.827 rows=1 loops=1)
           ->  Gather  (cost=7170.31..7170.52 rows=2 width=32) (actual time=20.559..20.818 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6170.31..6170.32 rows=1 width=32) (actual time=18.656..18.658 rows=1 loops=2)
                       ->  Nested Loop  (cost=0.71..6029.13 rows=18824 width=10) (actual time=0.110..15.009 rows=16440 loops=2)
                             ->  Nested Loop  (cost=0.29..578.65 rows=235 width=4) (actual time=0.094..2.079 rows=206 loops=2)
                                   Join Filter: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   Rows Removed by Join Filter: 4794
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.021..0.955 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Materialize  (cost=0.00..1.32 rows=1 width=4) (actual time=0.000..0.000 rows=1 loops=10000)
                                         Storage: Memory  Maximum Storage: 17kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.054 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10363.19..10389.86 rows=10667 width=36) (actual time=78.241..78.243 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=9829.86..10309.86 rows=10667 width=36) (actual time=67.782..78.088 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.86 rows=32000 width=14) (actual time=0.073..29.302 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.062..0.551 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.047..0.480 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.025..0.026 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.060 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.449 ms
 Execution Time: 79.341 ms
(42 rows)

query 12 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16688.71..33413.68 rows=1 width=27) (actual time=959.136..963.559 rows=1 loops=1)
   ->  GroupAggregate  (cost=16688.71..133763.51 rows=7 width=27) (actual time=959.135..963.557 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=16688.71..133268.32 rows=28293 width=27) (actual time=61.036..953.632 rows=15492 loops=1)
               ->  Gather Merge  (cost=16688.28..20075.93 rows=28293 width=15) (actual time=60.355..72.830 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=15688.22..15705.90 rows=7073 width=15) (actual time=53.368..53.692 rows=4280 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 404kB
                           Worker 0:  Sort Method: quicksort  Memory: 380kB
                           Worker 1:  Sort Method: quicksort  Memory: 397kB
                           Worker 2:  Sort Method: quicksort  Memory: 375kB
                           Worker 3:  Sort Method: quicksort  Memory: 374kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..15235.97 rows=7073 width=15) (actual time=0.175..51.991 rows=6191 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.056..0.056 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 23.137 ms
 Execution Time: 963.696 ms
(21 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16688.71..33413.68 rows=1 width=27) (actual time=88.398..90.117 rows=1 loops=1)
   ->  GroupAggregate  (cost=16688.71..133763.51 rows=7 width=27) (actual time=88.397..90.115 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=16688.71..133268.32 rows=28293 width=27) (actual time=39.147..85.948 rows=15492 loops=1)
               ->  Gather Merge  (cost=16688.28..20075.93 rows=28293 width=15) (actual time=39.108..44.280 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=15688.22..15705.90 rows=7073 width=15) (actual time=35.504..35.710 rows=4296 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 355kB
                           Worker 0:  Sort Method: quicksort  Memory: 345kB
                           Worker 1:  Sort Method: quicksort  Memory: 389kB
                           Worker 2:  Sort Method: quicksort  Memory: 423kB
                           Worker 3:  Sort Method: quicksort  Memory: 417kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..15235.97 rows=7073 width=15) (actual time=0.448..34.268 rows=6191 loops=5)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.697 ms
 Execution Time: 90.251 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1389.493..1389.497 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1389.492..1389.494 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1389.457..1389.465 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1347.802..1372.359 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=34.964..989.479 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.660..555.441 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=33.997..33.998 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.306..17.005 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.286 ms
 Execution Time: 1390.823 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1261.396..1261.399 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1261.394..1261.397 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1261.357..1261.366 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1220.262..1244.756 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=30.439..874.679 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.015..461.314 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=30.092..30.093 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.023..13.665 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.977 ms
 Execution Time: 1262.820 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84448.28..84448.30 rows=1 width=32) (actual time=541.496..547.018 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=84448.28..84448.30 rows=1 width=32) (actual time=541.495..547.016 rows=1 loops=1)
         ->  Gather  (cost=84447.83..84448.24 rows=4 width=64) (actual time=540.744..546.999 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=83447.83..83447.84 rows=1 width=64) (actual time=527.121..527.123 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7412.93..83097.61 rows=20012 width=33) (actual time=50.224..513.266 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1438.93..77071.09 rows=20012 width=16) (actual time=20.695..467.797 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8098
                                 Worker 0:  Heap Blocks: exact=8394
                                 Worker 1:  Heap Blocks: exact=8392
                                 Worker 2:  Heap Blocks: exact=8673
                                 Worker 3:  Heap Blocks: exact=8124
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1418.92 rows=80049 width=0) (actual time=13.748..13.748 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=29.161..29.162 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14176kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.123..12.787 rows=40000 loops=5)
 Planning Time: 26.113 ms
 Execution Time: 547.105 ms
(22 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84448.28..84448.30 rows=1 width=32) (actual time=114.171..116.647 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=84448.28..84448.30 rows=1 width=32) (actual time=114.170..116.645 rows=1 loops=1)
         ->  Gather  (cost=84447.83..84448.24 rows=4 width=64) (actual time=108.873..116.621 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=83447.83..83447.84 rows=1 width=64) (actual time=104.969..104.971 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7412.93..83097.61 rows=20012 width=33) (actual time=40.897..97.885 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1438.93..77071.09 rows=20012 width=16) (actual time=15.332..63.435 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8101
                                 Worker 0:  Heap Blocks: exact=8117
                                 Worker 1:  Heap Blocks: exact=8251
                                 Worker 2:  Heap Blocks: exact=7638
                                 Worker 3:  Heap Blocks: exact=9574
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1418.92 rows=80049 width=0) (actual time=8.257..8.257 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=25.047..25.048 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..6.985 rows=40000 loops=5)
 Planning Time: 1.613 ms
 Execution Time: 116.723 ms
(22 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243069.16..243177.50 rows=1 width=103) (actual time=1292.927..1300.157 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122983.53..122983.54 rows=1 width=32) (actual time=237.700..237.702 rows=1 loops=1)
           ->  HashAggregate  (cost=122732.75..122858.14 rows=10031 width=36) (actual time=234.408..237.127 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4253.38..120365.00 rows=236775 width=16) (actual time=28.741..123.874 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4194.18 rows=236775 width=0) (actual time=18.049..18.049 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=120085.62..125502.59 rows=50 width=103) (actual time=1292.925..1300.152 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=120085.34..125340.96 rows=50 width=36) (actual time=1292.290..1299.515 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=120085.34..124889.57 rows=40124 width=36) (actual time=1032.119..1046.671 rows=41755 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=119085.28..119110.36 rows=10031 width=36) (actual time=1022.006..1022.867 rows=8784 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1234kB
                           Worker 0:  Sort Method: quicksort  Memory: 1232kB
                           Worker 1:  Sort Method: quicksort  Memory: 1235kB
                           Worker 2:  Sort Method: quicksort  Memory: 1234kB
                           Worker 3:  Sort Method: quicksort  Memory: 1235kB
                           ->  Partial HashAggregate  (cost=118293.22..118418.61 rows=10031 width=36) (actual time=1014.137..1019.704 rows=9885 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4253.38..117701.28 rows=59194 width=16) (actual time=41.203..960.377 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13354
                                       Worker 0:  Heap Blocks: exact=13296
                                       Worker 1:  Heap Blocks: exact=13606
                                       Worker 2:  Heap Blocks: exact=13125
                                       Worker 3:  Heap Blocks: exact=13447
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4194.18 rows=236775 width=0) (actual time=36.408..36.409 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.629..0.630 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 21.243 ms
 Execution Time: 1301.549 ms
(46 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243069.16..243177.50 rows=1 width=103) (actual time=406.824..419.028 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122983.53..122983.54 rows=1 width=32) (actual time=222.314..222.316 rows=1 loops=1)
           ->  HashAggregate  (cost=122732.75..122858.14 rows=10031 width=36) (actual time=219.098..221.735 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4253.38..120365.00 rows=236775 width=16) (actual time=28.732..111.131 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4194.18 rows=236775 width=0) (actual time=18.069..18.070 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=120085.62..125502.59 rows=50 width=103) (actual time=406.823..419.025 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=120085.34..125340.96 rows=50 width=36) (actual time=406.797..418.997 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=120085.34..124889.57 rows=40124 width=36) (actual time=161.853..181.405 rows=41748 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=119085.28..119110.36 rows=10031 width=36) (actual time=153.633..154.484 rows=8840 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1232kB
                           Worker 0:  Sort Method: quicksort  Memory: 1231kB
                           Worker 1:  Sort Method: quicksort  Memory: 1231kB
                           Worker 2:  Sort Method: quicksort  Memory: 1239kB
                           Worker 3:  Sort Method: quicksort  Memory: 1236kB
                           ->  Partial HashAggregate  (cost=118293.22..118418.61 rows=10031 width=36) (actual time=146.124..151.328 rows=9884 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4253.38..117701.28 rows=59194 width=16) (actual time=30.687..111.099 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13117
                                       Worker 0:  Heap Blocks: exact=12121
                                       Worker 1:  Heap Blocks: exact=12229
                                       Worker 2:  Heap Blocks: exact=15567
                                       Worker 3:  Heap Blocks: exact=13794
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4194.18 rows=236775 width=0) (actual time=24.860..24.860 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.022..0.022 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.592 ms
 Execution Time: 419.771 ms
(46 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27623.60..27623.60 rows=1 width=44) (actual time=289.858..290.950 rows=1 loops=1)
   ->  Sort  (cost=27623.60..27663.20 rows=15843 width=44) (actual time=289.857..290.948 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19841.88..27544.38 rows=15843 width=44) (actual time=214.540..287.537 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19841.88..26804.45 rows=58150 width=40) (actual time=214.525..269.031 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18841.82..18878.17 rows=14538 width=40) (actual time=185.048..186.428 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 1996kB
                           Worker 0:  Sort Method: quicksort  Memory: 2213kB
                           Worker 1:  Sort Method: quicksort  Memory: 2223kB
                           Worker 2:  Sort Method: quicksort  Memory: 2121kB
                           Worker 3:  Sort Method: quicksort  Memory: 2250kB
                           ->  Parallel Hash Join  (cost=6682.20..17836.70 rows=14538 width=40) (actual time=35.192..105.800 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=7.387..61.140 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=2.232..6.575 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12115 width=40) (actual time=27.631..27.632 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12115 width=40) (actual time=0.529..25.547 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 18.809 ms
 Execution Time: 291.191 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27623.60..27623.60 rows=1 width=44) (actual time=246.599..247.023 rows=1 loops=1)
   ->  Sort  (cost=27623.60..27663.20 rows=15843 width=44) (actual time=246.598..247.021 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19841.88..27544.38 rows=15843 width=44) (actual time=170.813..243.591 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19841.88..26804.45 rows=58150 width=40) (actual time=170.799..225.241 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18841.82..18878.17 rows=14538 width=40) (actual time=153.073..154.457 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 1954kB
                           Worker 0:  Sort Method: quicksort  Memory: 2064kB
                           Worker 1:  Sort Method: quicksort  Memory: 2360kB
                           Worker 2:  Sort Method: quicksort  Memory: 2199kB
                           Worker 3:  Sort Method: quicksort  Memory: 2225kB
                           ->  Parallel Hash Join  (cost=6682.20..17836.70 rows=14538 width=40) (actual time=17.264..74.303 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.675..43.336 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.080..2.396 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12115 width=40) (actual time=14.463..14.464 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12115 width=40) (actual time=0.012..12.207 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.304 ms
 Execution Time: 247.275 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176290.35..176290.36 rows=1 width=32) (actual time=2639.463..2645.208 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176290.35..176290.36 rows=1 width=32) (actual time=2639.462..2645.206 rows=1 loops=1)
         ->  Gather  (cost=176290.13..176290.34 rows=2 width=32) (actual time=2608.801..2645.184 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175290.13..175290.14 rows=1 width=32) (actual time=2617.946..2617.948 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.51..175288.07 rows=822 width=8) (actual time=309.940..2617.862 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.08..175062.94 rows=82 width=40) (actual time=309.599..2587.300 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.65..5351.85 rows=83 width=4) (actual time=27.024..27.062 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=83 width=4) (actual time=0.739..26.987 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169216.58 rows=197390 width=36) (actual time=0.761..2544.238 rows=198362 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136250.41 rows=6001065 width=9) (actual time=0.705..1691.130 rows=5951943 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.62 rows=10 width=17) (actual time=0.403..0.438 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 23.895 ms
 Execution Time: 2645.322 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=176290.35..176290.36 rows=1 width=32) (actual time=2321.564..2326.630 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=176290.35..176290.36 rows=1 width=32) (actual time=2321.562..2326.628 rows=1 loops=1)
         ->  Gather  (cost=176290.13..176290.34 rows=2 width=32) (actual time=2207.219..2326.612 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=175290.13..175290.14 rows=1 width=32) (actual time=2279.389..2279.391 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.51..175288.07 rows=822 width=8) (actual time=218.102..2279.349 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.08..175062.94 rows=82 width=40) (actual time=218.071..2278.594 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.65..5351.85 rows=83 width=4) (actual time=9.772..9.787 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 25kB
                                       Worker 0:  Sort Method: quicksort  Memory: 25kB
                                       Worker 1:  Sort Method: quicksort  Memory: 25kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=83 width=4) (actual time=0.056..9.740 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169216.58 rows=197390 width=36) (actual time=0.074..2255.294 rows=196404 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136250.41 rows=6001065 width=9) (actual time=0.046..1439.715 rows=5893487 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.62 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 1.926 ms
 Execution Time: 2326.740 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669367.87..669368.12 rows=100 width=71) (actual time=2953.100..2953.105 rows=9 loops=1)
   ->  Sort  (cost=669367.87..674369.65 rows=2000711 width=71) (actual time=2953.099..2953.103 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306674.16..592902.13 rows=2000711 width=71) (actual time=2818.651..2953.070 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306674.16..552887.91 rows=2000711 width=44) (actual time=2818.639..2953.041 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306674.03..480380.80 rows=2000711 width=44) (actual time=2494.587..2953.002 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306664.10..307914.32 rows=500089 width=43) (actual time=2330.835..2330.842 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201954.84..248336.11 rows=500089 width=43) (actual time=2011.432..2330.809 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194982.84..240051.35 rows=500089 width=24) (actual time=1947.964..2267.329 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.616..225.807 rows=1500000 loops=1)
                                             ->  Hash  (cost=188731.72..188731.72 rows=500089 width=4) (actual time=1856.969..1856.970 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188731.72 rows=500089 width=4) (actual time=396.302..1856.952 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136222.41 rows=6001065 width=9) (actual time=0.305..732.997 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=63.163..63.163 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.526..35.859 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136222.41 rows=6001065 width=9) (actual time=0.038..423.008 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 27.714 ms
 Execution Time: 2953.323 ms
(35 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669367.87..669368.12 rows=100 width=71) (actual time=2566.280..2566.285 rows=9 loops=1)
   ->  Sort  (cost=669367.87..674369.65 rows=2000711 width=71) (actual time=2566.279..2566.283 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306674.16..592902.13 rows=2000711 width=71) (actual time=2430.979..2566.240 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306674.16..552887.91 rows=2000711 width=44) (actual time=2430.968..2566.211 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306674.03..480380.80 rows=2000711 width=44) (actual time=2105.638..2566.160 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306664.10..307914.32 rows=500089 width=43) (actual time=1941.439..1941.446 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201954.84..248336.11 rows=500089 width=43) (actual time=1737.608..1941.418 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194982.84..240051.35 rows=500089 width=24) (actual time=1693.890..1897.689 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.008..83.046 rows=1500000 loops=1)
                                             ->  Hash  (cost=188731.72..188731.72 rows=500089 width=4) (actual time=1638.601..1638.602 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188731.72 rows=500089 width=4) (actual time=345.673..1638.586 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136222.41 rows=6001065 width=9) (actual time=0.028..558.746 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.401..43.401 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.012..18.121 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136222.41 rows=6001065 width=9) (actual time=0.036..422.762 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 2.472 ms
 Execution Time: 2566.482 ms
(35 rows)

query 19 run 1
SET
SET
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9689.85..9689.86 rows=1 width=32) (actual time=117.090..119.820 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9689.85..9689.86 rows=1 width=32) (actual time=117.088..119.818 rows=1 loops=1)
         ->  Gather  (cost=9689.63..9689.84 rows=2 width=32) (actual time=117.075..119.810 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8689.63..8689.64 rows=1 width=32) (actual time=110.094..110.095 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8689.28 rows=47 width=12) (actual time=5.600..110.021 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.861..31.176 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.462..0.465 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 25.062 ms
 Execution Time: 120.661 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9689.85..9689.86 rows=1 width=32) (actual time=21.149..22.900 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9689.85..9689.86 rows=1 width=32) (actual time=21.148..22.898 rows=1 loops=1)
         ->  Gather  (cost=9689.63..9689.84 rows=2 width=32) (actual time=21.000..22.890 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8689.63..8689.64 rows=1 width=32) (actual time=18.358..18.359 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8689.28 rows=47 width=12) (actual time=0.157..18.326 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.095..16.330 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 1
                                 Heap Fetches: 0
 Planning Time: 3.180 ms
 Execution Time: 22.991 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216432.91..216432.92 rows=1 width=51) (actual time=3534.944..3535.037 rows=1 loops=1)
   ->  Sort  (cost=216432.91..216432.92 rows=1 width=51) (actual time=3534.943..3535.035 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192668.80..216432.90 rows=1 width=51) (actual time=3370.102..3534.855 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.659..3.197 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.212..0.215 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.442..2.276 rows=10000 loops=1)
               ->  Materialize  (cost=192668.80..215977.59 rows=1 width=8) (actual time=5.840..7.832 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=192668.80..215977.59 rows=1 width=8) (actual time=2557.806..3364.112 rows=5898 loops=1)
                           ->  Hash Join  (cost=192668.38..210313.59 rows=4928 width=44) (actual time=2557.420..3074.542 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186660.87..203025.35 rows=487885 width=40) (actual time=2527.711..3001.096 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16639.34..143094.32 rows=926332 width=13) (actual time=124.954..1963.043 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16407.75 rows=926332 width=0) (actual time=105.247..105.247 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=29.678..29.768 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=25.793..29.540 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.236..15.754 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.048..0.048 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 30.364 ms
 Execution Time: 3539.289 ms
(43 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216432.91..216432.92 rows=1 width=51) (actual time=1382.368..1382.467 rows=1 loops=1)
   ->  Sort  (cost=216432.91..216432.92 rows=1 width=51) (actual time=1382.366..1382.465 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192668.80..216432.90 rows=1 width=51) (actual time=1218.521..1382.279 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.036..1.570 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.025..0.028 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.007..0.649 rows=10000 loops=1)
               ->  Materialize  (cost=192668.80..215977.59 rows=1 width=8) (actual time=1.658..2.923 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=192668.80..215977.59 rows=1 width=8) (actual time=726.161..1215.172 rows=5898 loops=1)
                           ->  Hash Join  (cost=192668.38..210313.59 rows=4928 width=44) (actual time=726.131..1195.802 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=186660.87..203025.35 rows=487885 width=40) (actual time=712.556..1145.634 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16639.34..143094.32 rows=926332 width=13) (actual time=87.240..301.371 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16407.75 rows=926332 width=0) (actual time=68.033..68.033 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=13.542..13.638 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=10.396..13.405 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.074..7.244 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.828 ms
 Execution Time: 1386.747 ms
(43 rows)

query 21 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57575.02..57575.03 rows=1 width=34) (actual time=1927.612..1929.714 rows=100 loops=1)
   ->  Sort  (cost=57575.02..57575.03 rows=1 width=34) (actual time=1927.611..1929.706 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57574.99..57575.01 rows=1 width=34) (actual time=1926.601..1929.281 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57574.99..57575.00 rows=1 width=26) (actual time=1926.592..1928.849 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=29587.86..57574.98 rows=1 width=26) (actual time=442.330..1914.580 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29587.43..57572.55 rows=1 width=38) (actual time=441.972..909.879 rows=6909 loops=1)
                                 ->  Gather  (cost=29587.00..57570.19 rows=1 width=34) (actual time=441.627..448.316 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28587.00..56570.09 rows=1 width=34) (actual time=434.071..436.064 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..26025.09 rows=500089 width=8) (actual time=0.167..106.132 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28337.30..28337.30 rows=19942 width=34) (actual time=234.349..234.352 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14368kB
                                                   ->  Hash Join  (cost=237.88..28337.30 rows=19942 width=34) (actual time=1.674..219.163 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..26025.09 rows=500089 width=8) (actual time=0.114..165.488 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=1.540..1.542 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.424..1.456 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.049..0.051 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.372..1.351 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.264..0.264 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.031..0.031 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.144..0.144 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 27.874 ms
 Execution Time: 1929.939 ms
(47 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57575.02..57575.03 rows=1 width=34) (actual time=450.943..453.036 rows=100 loops=1)
   ->  Sort  (cost=57575.02..57575.03 rows=1 width=34) (actual time=450.942..453.028 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=57574.99..57575.01 rows=1 width=34) (actual time=449.936..452.608 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=57574.99..57575.00 rows=1 width=26) (actual time=449.927..452.176 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=29587.86..57574.98 rows=1 width=26) (actual time=376.975..439.798 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=29587.43..57572.55 rows=1 width=38) (actual time=376.954..418.539 rows=6909 loops=1)
                                 ->  Gather  (cost=29587.00..57570.19 rows=1 width=34) (actual time=376.922..380.861 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Right Anti Join  (cost=28587.00..56570.09 rows=1 width=34) (actual time=372.186..374.004 rows=2858 loops=5)
                                             Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 31839
                                             ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..26025.09 rows=500089 width=8) (actual time=0.035..110.220 rows=758659 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=28337.30..28337.30 rows=19942 width=34) (actual time=174.714..174.717 rows=31833 loops=5)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 14368kB
                                                   ->  Hash Join  (cost=237.88..28337.30 rows=19942 width=34) (actual time=0.454..160.603 rows=31833 loops=5)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..26025.09 rows=500089 width=8) (actual time=0.030..108.239 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=0.403..0.405 rows=421 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.071..0.334 rows=421 loops=5)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.055..0.274 rows=421 loops=5)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.031..0.031 rows=421 loops=5)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.830 ms
 Execution Time: 453.200 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.28 rows=1 width=72) (actual time=126.415..128.364 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=42.324..42.414 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=42.191..42.402 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=35.032..35.033 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1985 width=6) (actual time=0.175..33.804 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7512.08 rows=723 width=72) (actual time=126.414..128.271 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7494.01 rows=723 width=38) (actual time=66.705..127.833 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=66.202..69.268 rows=2738 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.997..21.134 rows=1613 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 531kB
                           Worker 0:  Sort Method: quicksort  Memory: 476kB
                           Worker 1:  Sort Method: quicksort  Memory: 465kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..18.904 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.021..0.021 rows=1 loops=2738)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 14.238 ms
 Execution Time: 129.205 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.28 rows=1 width=72) (actual time=57.217..59.003 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=27.438..27.572 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=27.342..27.562 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=25.070..25.071 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1985 width=6) (actual time=0.012..23.964 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7512.08 rows=723 width=72) (actual time=57.216..58.868 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7494.01 rows=723 width=38) (actual time=50.769..58.653 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=50.723..53.061 rows=2737 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.497..20.577 rows=1616 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 537kB
                           Worker 0:  Sort Method: quicksort  Memory: 461kB
                           Worker 1:  Sort Method: quicksort  Memory: 473kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.016..18.414 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 1.096 ms
 Execution Time: 59.147 ms
(29 rows)

