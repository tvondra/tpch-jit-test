query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3951265.79..3951265.80 rows=1 width=236) (actual time=63396.555..63396.556 rows=1 loops=1)
   ->  Sort  (cost=3951265.79..3951265.81 rows=6 width=236) (actual time=63396.554..63396.555 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3951265.60..3951265.76 rows=6 width=236) (actual time=63396.504..63396.510 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..1875025.00 rows=59321160 width=25) (actual time=0.469..10996.209 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 24.794 ms
 Execution Time: 63397.214 ms
(12 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3951265.79..3951265.80 rows=1 width=236) (actual time=61208.260..61208.262 rows=1 loops=1)
   ->  Sort  (cost=3951265.79..3951265.81 rows=6 width=236) (actual time=61208.259..61208.260 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3951265.60..3951265.76 rows=6 width=236) (actual time=61208.211..61208.217 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..1875025.00 rows=59321160 width=25) (actual time=0.023..9265.127 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 1.220 ms
 Execution Time: 61208.343 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=506871.69..506871.69 rows=1 width=192) (actual time=26672.697..26672.712 rows=100 loops=1)
   ->  Sort  (cost=506871.69..506871.69 rows=1 width=192) (actual time=26672.696..26672.704 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=52.83..506871.68 rows=1 width=192) (actual time=27.634..26668.806 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.353..0.361 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.168..0.170 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.180..0.183 rows=25 loops=1)
               ->  Materialize  (cost=52.83..506868.98 rows=1 width=170) (actual time=4.593..5332.598 rows=4737 loops=5)
                     Storage: Memory  Maximum Storage: 987kB
                     ->  Nested Loop  (cost=52.83..506868.98 rows=1 width=170) (actual time=22.948..26648.593 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..502397.98 rows=1 width=34) (actual time=1.975..1251.855 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54341.51 rows=8221 width=30) (actual time=0.279..282.532 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.002..0.003 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.114..0.114 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.101..0.111 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.084..0.107 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.083..0.105 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.075..0.076 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.019..0.019 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.007 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.493 rows=49972 loops=4737)
 Planning Time: 24.633 ms
 Execution Time: 26672.937 ms
(51 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=506871.69..506871.69 rows=1 width=192) (actual time=25468.482..25468.496 rows=100 loops=1)
   ->  Sort  (cost=506871.69..506871.69 rows=1 width=192) (actual time=25468.481..25468.489 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Nested Loop  (cost=52.83..506871.68 rows=1 width=192) (actual time=12.971..25465.401 rows=4737 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.016..0.024 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.009 rows=25 loops=1)
               ->  Materialize  (cost=52.83..506868.98 rows=1 width=170) (actual time=2.031..5092.026 rows=4737 loops=5)
                     Storage: Memory  Maximum Storage: 987kB
                     ->  Nested Loop  (cost=52.83..506868.98 rows=1 width=170) (actual time=10.142..25446.209 rows=4737 loops=1)
                           Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=52.83..502397.98 rows=1 width=34) (actual time=0.107..351.760 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54341.51 rows=8221 width=30) (actual time=0.014..106.875 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=52.41..54.49 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=51.96..51.97 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..51.95 rows=4 width=6) (actual time=0.018..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..50.65 rows=19 width=10) (actual time=0.010..0.019 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..49.03 rows=19 width=10) (actual time=0.009..0.017 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.77 rows=19 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.016..0.017 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.007 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.447 rows=49972 loops=4737)
 Planning Time: 2.389 ms
 Execution Time: 25468.682 ms
(51 rows)

query 3 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3202481.88..3202481.91 rows=10 width=44) (actual time=24499.591..24499.597 rows=10 loops=1)
   ->  Sort  (cost=3202481.88..3210300.00 rows=3127249 width=44) (actual time=24499.589..24499.594 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3059165.09..3134903.15 rows=3127249 width=44) (actual time=24436.260..24480.001 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 16  Batches: 1  Memory Usage: 49169kB
               ->  Hash Join  (cost=522580.98..2876416.48 rows=3127249 width=24) (actual time=7357.639..24225.022 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1875025.00 rows=32592535 width=16) (actual time=0.538..10645.006 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=497562.23..497562.23 rows=1439260 width=12) (actual time=7353.672..7353.675 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 2  Memory Usage: 47606kB
                           ->  Hash Join  (cost=126866.53..497562.23 rows=1439260 width=12) (actual time=958.874..7000.910 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68440.80..420144.88 rows=7234886 width=16) (actual time=531.944..4901.079 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66632.08 rows=7234886 width=0) (actual time=479.322..479.322 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54695.94..54695.94 rows=298383 width=4) (actual time=426.162..426.162 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54695.94 rows=298383 width=4) (actual time=0.540..375.344 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 33.856 ms
 Execution Time: 24500.956 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3202481.88..3202481.91 rows=10 width=44) (actual time=19369.483..19369.489 rows=10 loops=1)
   ->  Sort  (cost=3202481.88..3210300.00 rows=3127249 width=44) (actual time=19369.482..19369.486 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3059165.09..3134903.15 rows=3127249 width=44) (actual time=19306.299..19349.859 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 16  Batches: 1  Memory Usage: 49169kB
               ->  Hash Join  (cost=522580.98..2876416.48 rows=3127249 width=24) (actual time=4494.366..19109.753 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1875025.00 rows=32592535 width=16) (actual time=0.037..8535.011 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=497562.23..497562.23 rows=1439260 width=12) (actual time=4491.572..4491.574 rows=1451805 loops=1)
                           Buckets: 2097152  Batches: 2  Memory Usage: 47606kB
                           ->  Hash Join  (cost=126866.53..497562.23 rows=1439260 width=12) (actual time=816.475..4209.441 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=68440.80..420144.88 rows=7234886 width=16) (actual time=502.942..2388.317 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..66632.08 rows=7234886 width=0) (actual time=450.839..450.839 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54695.94..54695.94 rows=298383 width=4) (actual time=312.865..312.865 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54695.94 rows=298383 width=4) (actual time=0.044..263.266 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 2.451 ms
 Execution Time: 19370.862 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=764589.98..764589.98 rows=1 width=24) (actual time=9857.071..9857.073 rows=1 loops=1)
   ->  Sort  (cost=764589.98..764589.99 rows=5 width=24) (actual time=9857.070..9857.071 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=764589.91..764589.96 rows=5 width=24) (actual time=9856.289..9856.291 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=327211.72..761894.49 rows=539083 width=16) (actual time=4921.797..9746.717 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=327134.74..328482.67 rows=539172 width=20) (actual time=4921.512..4988.102 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=6448.95..275804.53 rows=539172 width=20) (actual time=109.631..4728.449 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6314.16 rows=539172 width=0) (actual time=62.632..62.632 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..374921.24 rows=19996853 width=4) (actual time=0.277..3056.198 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 25.983 ms
 Execution Time: 9859.241 ms
(21 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=764589.98..764589.98 rows=1 width=24) (actual time=6303.485..6303.486 rows=1 loops=1)
   ->  Sort  (cost=764589.98..764589.99 rows=5 width=24) (actual time=6303.484..6303.485 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=764589.91..764589.96 rows=5 width=24) (actual time=6303.443..6303.445 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=327211.72..761894.49 rows=539083 width=16) (actual time=1551.661..6201.989 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=327134.74..328482.67 rows=539172 width=20) (actual time=1551.605..1619.100 rows=560424 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: external merge  Disk: 16456kB
                           ->  Bitmap Heap Scan on orders  (cost=6448.95..275804.53 rows=539172 width=20) (actual time=108.630..1421.095 rows=560424 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=231887
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6314.16 rows=539172 width=0) (actual time=62.208..62.208 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..374921.24 rows=19996853 width=4) (actual time=0.049..2876.426 rows=37929279 loops=1)
                           Heap Fetches: 0
 Planning Time: 2.193 ms
 Execution Time: 6305.830 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1642283.58..1642283.58 rows=1 width=58) (actual time=10262.066..10262.073 rows=1 loops=1)
   ->  Sort  (cost=1642283.58..1642283.64 rows=25 width=58) (actual time=10262.065..10262.071 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1641363.70..1642283.45 rows=25 width=58) (actual time=10241.043..10262.037 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1641363.70..1641547.59 rows=73555 width=38) (actual time=10235.796..10238.766 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 7012kB
                     ->  Hash Join  (cost=95542.33..1635418.05 rows=73555 width=38) (actual time=788.118..10191.833 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90821.33..1621042.59 rows=1838944 width=50) (actual time=746.638..9739.951 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90820.77..399794.28 rows=459812 width=38) (actual time=746.233..6139.532 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=27497.81..323251.73 rows=2299061 width=8) (actual time=221.761..4914.958 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26923.05 rows=2299061 width=0) (actual time=169.077..169.078 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.17..59573.17 rows=299983 width=38) (actual time=523.257..523.260 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.17 rows=299983 width=38) (actual time=0.824..452.224 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=8) (actual time=0.461..293.125 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.343..0.345 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.329..0.335 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.150..0.151 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.164..0.164 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.157..0.158 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.007..0.007 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=39.525..39.526 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.290..23.221 rows=100000 loops=1)
 Planning Time: 35.966 ms
 Execution Time: 10262.431 ms
(42 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1642283.58..1642283.58 rows=1 width=58) (actual time=5260.244..5260.251 rows=1 loops=1)
   ->  Sort  (cost=1642283.58..1642283.64 rows=25 width=58) (actual time=5260.243..5260.249 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=1641363.70..1642283.45 rows=25 width=58) (actual time=5239.330..5260.219 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=1641363.70..1641547.59 rows=73555 width=38) (actual time=5234.191..5237.072 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 7012kB
                     ->  Hash Join  (cost=95542.33..1635418.05 rows=73555 width=38) (actual time=656.960..5199.670 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90821.33..1621042.59 rows=1838944 width=50) (actual time=621.571..4782.483 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90820.77..399794.28 rows=459812 width=38) (actual time=621.521..2665.028 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=27497.81..323251.73 rows=2299061 width=8) (actual time=211.442..1649.873 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26923.05 rows=2299061 width=0) (actual time=159.050..159.050 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.17..59573.17 rows=299983 width=38) (actual time=409.029..409.032 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.17 rows=299983 width=38) (actual time=0.098..340.151 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=8) (actual time=0.025..187.712 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.058..0.060 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.044..0.050 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.010..0.011 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=34.818..34.818 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.020..17.195 rows=100000 loops=1)
 Planning Time: 5.748 ms
 Execution Time: 5260.622 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2067212.88..2067212.89 rows=1 width=32) (actual time=13341.491..13341.493 rows=1 loops=1)
   ->  Aggregate  (cost=2067212.88..2067212.89 rows=1 width=32) (actual time=13341.490..13341.491 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=232607.22..2061130.38 rows=1216500 width=12) (actual time=1268.157..12782.864 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..232303.10 rows=1216500 width=0) (actual time=1183.028..1183.028 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 20.521 ms
 Execution Time: 13342.571 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2067212.88..2067212.89 rows=1 width=32) (actual time=6464.366..6464.367 rows=1 loops=1)
   ->  Aggregate  (cost=2067212.88..2067212.89 rows=1 width=32) (actual time=6464.364..6464.365 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=232607.22..2061130.38 rows=1216500 width=12) (actual time=1135.813..6141.473 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..232303.10 rows=1216500 width=0) (actual time=1051.551..1051.551 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.508 ms
 Execution Time: 6464.566 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2718792.04..2718792.16 rows=1 width=116) (actual time=18228.370..18228.377 rows=1 loops=1)
   ->  GroupAggregate  (cost=2718792.04..2720011.75 rows=10028 width=116) (actual time=18228.369..18228.375 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2718792.04..2718944.80 rows=61102 width=96) (actual time=18221.317..18221.925 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 6503kB
               ->  Hash Join  (cost=563405.56..2713934.76 rows=61102 width=96) (actual time=4922.557..18182.884 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2112136.78 rows=1468237 width=46) (actual time=30.798..12646.558 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2025001.40 rows=18352962 width=24) (actual time=0.542..10393.060 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=30.221..30.223 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.527..28.780 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.272..19.733 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.225..0.226 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.210..0.214 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536572.03..536572.03 rows=1200010 width=30) (actual time=4887.019..4887.021 rows=1191175 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 44259kB
                           ->  Hash Join  (cost=57052.21..536572.03 rows=1200010 width=30) (actual time=454.552..4642.672 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411269.27 rows=15000127 width=8) (actual time=0.601..1470.176 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.29..55552.29 rows=119993 width=30) (actual time=453.548..453.549 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.29 rows=119993 width=30) (actual time=0.595..427.153 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=8) (actual time=0.518..294.044 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.048..0.048 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.033..0.035 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 36.754 ms
 Execution Time: 18228.952 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2718792.04..2718792.16 rows=1 width=116) (actual time=14683.482..14683.488 rows=1 loops=1)
   ->  GroupAggregate  (cost=2718792.04..2720011.75 rows=10028 width=116) (actual time=14683.481..14683.487 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2718792.04..2718944.80 rows=61102 width=96) (actual time=14676.494..14677.108 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 6503kB
               ->  Hash Join  (cost=563405.56..2713934.76 rows=61102 width=96) (actual time=4060.750..14640.144 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2112136.78 rows=1468237 width=46) (actual time=18.404..9996.158 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2025001.40 rows=18352962 width=24) (actual time=0.036..8167.567 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=18.338..18.340 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.038..17.147 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.011..6.090 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536572.03..536572.03 rows=1200010 width=30) (actual time=4040.162..4040.164 rows=1191175 loops=1)
                           Buckets: 1048576  Batches: 2  Memory Usage: 44259kB
                           ->  Hash Join  (cost=57052.21..536572.03 rows=1200010 width=30) (actual time=288.216..3812.005 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411269.27 rows=15000127 width=8) (actual time=0.045..1053.127 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.29..55552.29 rows=119993 width=30) (actual time=287.730..287.732 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.29 rows=119993 width=30) (actual time=0.049..264.690 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=8) (actual time=0.010..94.651 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.024..0.024 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.017..0.019 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.949 ms
 Execution Time: 14684.102 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=578201.67..578201.91 rows=1 width=64) (actual time=11583.191..11583.197 rows=1 loops=1)
   ->  GroupAggregate  (cost=578201.67..578796.15 rows=2406 width=64) (actual time=11583.190..11583.196 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=578201.67..578262.37 rows=24283 width=70) (actual time=11577.918..11578.387 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2259kB
               ->  Nested Loop  (cost=226604.14..576432.93 rows=24283 width=70) (actual time=5377.923..11557.176 rows=23842 loops=1)
                     ->  Hash Join  (cost=226603.99..575749.51 rows=24283 width=20) (actual time=5377.902..11513.708 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=222132.99..571214.77 rows=24283 width=20) (actual time=5338.019..11459.020 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=158810.04..507193.67 rows=121416 width=24) (actual time=4842.328..10922.205 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54793.91..384783.09 rows=4581412 width=12) (actual time=367.124..5218.192 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..53648.56 rows=4581412 width=0) (actual time=313.793..313.793 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=99047.00..99047.00 rows=397530 width=20) (actual time=4474.182..4474.183 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..99047.00 rows=397530 width=20) (actual time=2.082..4303.574 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53964.87 rows=13253 width=4) (actual time=1.157..351.436 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.09 rows=31 width=24) (actual time=0.234..0.298 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59573.17..59573.17 rows=299983 width=4) (actual time=495.103..495.105 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.17 rows=299983 width=4) (actual time=1.122..444.166 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=8) (actual time=0.574..294.614 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.517..0.518 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.496..0.505 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.228..0.232 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.232..0.232 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.222..0.223 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=39.503..39.503 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.305..23.889 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.004..0.004 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 44.365 ms
 Execution Time: 11583.648 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=578201.67..578201.91 rows=1 width=64) (actual time=3806.539..3806.546 rows=1 loops=1)
   ->  GroupAggregate  (cost=578201.67..578796.15 rows=2406 width=64) (actual time=3806.538..3806.544 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=578201.67..578262.37 rows=24283 width=70) (actual time=3801.322..3801.784 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2259kB
               ->  Nested Loop  (cost=226604.14..576432.93 rows=24283 width=70) (actual time=1211.866..3787.655 rows=23842 loops=1)
                     ->  Hash Join  (cost=226603.99..575749.51 rows=24283 width=20) (actual time=1211.842..3764.099 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=222132.99..571214.77 rows=24283 width=20) (actual time=1177.766..3718.252 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=158810.04..507193.67 rows=121416 width=24) (actual time=799.692..3307.693 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=54793.91..384783.09 rows=4581412 width=12) (actual time=345.395..1957.148 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..53648.56 rows=4581412 width=0) (actual time=292.722..292.722 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=99047.00..99047.00 rows=397530 width=20) (actual time=453.254..453.255 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.99..99047.00 rows=397530 width=20) (actual time=0.097..366.067 rows=389521 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..53964.87 rows=13253 width=4) (actual time=0.061..144.445 rows=13011 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.09 rows=31 width=24) (actual time=0.008..0.014 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=59573.17..59573.17 rows=299983 width=4) (actual time=377.466..377.468 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.17 rows=299983 width=4) (actual time=0.106..328.393 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=8) (actual time=0.026..183.561 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.065..0.066 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.058..0.063 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.022..0.024 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=33.679..33.679 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.061..16.876 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 6.339 ms
 Execution Time: 3807.008 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1630482.83..1630482.83 rows=1 width=90) (actual time=24053.970..24053.976 rows=1 loops=1)
   ->  Sort  (cost=1630482.83..1630633.20 rows=60150 width=90) (actual time=24053.968..24053.974 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1629279.83..1630182.08 rows=60150 width=90) (actual time=24052.647..24053.079 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=886160.95..1576257.63 rows=3029840 width=81) (actual time=13146.818..21585.067 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=886159.39..1559379.85 rows=3029840 width=31) (actual time=13146.509..20630.969 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411269.27 rows=15000127 width=8) (actual time=0.553..2160.377 rows=15000000 loops=1)
                           ->  Hash  (cost=827574.39..827574.39 rows=3029840 width=31) (actual time=13144.594..13144.597 rows=3248192 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 61114kB
                                 ->  Hash Join  (cost=4483.22..827574.39 rows=3029840 width=31) (actual time=42.646..12323.412 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=12.22..815149.73 rows=3029840 width=35) (actual time=2.643..11619.783 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=0.99..407851.91 rows=3029840 width=33) (actual time=2.282..6960.187 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64306.24 rows=101010 width=4) (actual time=0.034..507.219 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.09 rows=31 width=29) (actual time=0.040..0.056 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Materialize  (cost=0.43..201501.44 rows=7998686 width=14) (actual time=0.329..2938.074 rows=12548878 loops=1)
                                                   Storage: Memory  Maximum Storage: 17kB
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181504.72 rows=7998686 width=14) (actual time=0.304..1119.894 rows=7999980 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=39.621..39.622 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.293..23.395 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.279..0.279 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.244..0.249 rows=25 loops=1)
 Planning Time: 47.854 ms
 Execution Time: 24055.130 ms
(40 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1630482.83..1630482.83 rows=1 width=90) (actual time=18097.663..18097.669 rows=1 loops=1)
   ->  Sort  (cost=1630482.83..1630633.20 rows=60150 width=90) (actual time=18097.662..18097.667 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1629279.83..1630182.08 rows=60150 width=90) (actual time=18097.136..18097.566 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=886160.95..1576257.63 rows=3029840 width=81) (actual time=7740.406..15648.241 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=886159.39..1559379.85 rows=3029840 width=31) (actual time=7740.365..14748.368 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411269.27 rows=15000127 width=8) (actual time=0.035..1737.342 rows=15000000 loops=1)
                           ->  Hash  (cost=827574.39..827574.39 rows=3029840 width=31) (actual time=7738.938..7738.941 rows=3248192 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 61114kB
                                 ->  Hash Join  (cost=4483.22..827574.39 rows=3029840 width=31) (actual time=28.461..6973.450 rows=3248192 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Merge Join  (cost=12.22..815149.73 rows=3029840 width=35) (actual time=0.131..6304.575 rows=3248192 loops=1)
                                             Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                                             Join Filter: (lineitem.l_suppkey = partsupp.ps_suppkey)
                                             Rows Removed by Join Filter: 4873781
                                             ->  Nested Loop  (cost=0.99..407851.91 rows=3029840 width=33) (actual time=0.060..2040.246 rows=3248192 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64306.24 rows=101010 width=4) (actual time=0.032..390.623 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..3.09 rows=31 width=29) (actual time=0.004..0.012 rows=30 loops=108312)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Materialize  (cost=0.43..201501.44 rows=7998686 width=14) (actual time=0.042..2614.103 rows=12548878 loops=1)
                                                   Storage: Memory  Maximum Storage: 17kB
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..181504.72 rows=7998686 width=14) (actual time=0.023..865.866 rows=7999980 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=27.930..27.930 rows=100000 loops=1)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.013..13.134 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.028..0.028 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.014 rows=25 loops=1)
 Planning Time: 7.674 ms
 Execution Time: 18098.902 ms
(40 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1722637.72..1722637.77 rows=20 width=202) (actual time=14874.108..14874.113 rows=20 loops=1)
   ->  Sort  (cost=1722637.72..1724127.18 rows=595782 width=202) (actual time=14874.107..14874.111 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1571126.71..1706784.18 rows=595782 width=202) (actual time=12481.979..14752.627 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1571126.71..1691889.63 rows=595782 width=182) (actual time=12481.215..14074.898 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
                     ->  Nested Loop  (cost=1571126.54..1665079.44 rows=595782 width=182) (actual time=12481.053..13719.861 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1571126.39..1650485.77 rows=595782 width=160) (actual time=12480.784..13307.508 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66679.15 rows=1499915 width=148) (actual time=0.680..382.463 rows=1499997 loops=1)
                                 ->  Sort  (cost=1571125.83..1572615.28 rows=595782 width=16) (actual time=12480.088..12583.026 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35280kB
                                       ->  Hash Join  (cost=284963.76..1513977.15 rows=595782 width=16) (actual time=4951.508..12024.200 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189944.34 rows=14883658 width=16) (actual time=0.491..5408.272 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=277457.65..277457.65 rows=600444 width=8) (actual time=4949.748..4949.749 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7182.99..277457.65 rows=600444 width=8) (actual time=111.787..4766.589 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7032.88 rows=600444 width=0) (actual time=64.466..64.466 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.012..0.012 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 34.932 ms
 Execution Time: 14879.487 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1722637.72..1722637.77 rows=20 width=202) (actual time=10718.893..10718.899 rows=20 loops=1)
   ->  Sort  (cost=1722637.72..1724127.18 rows=595782 width=202) (actual time=10718.892..10718.896 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=1571126.71..1706784.18 rows=595782 width=202) (actual time=8415.920..10597.071 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=1571126.71..1691889.63 rows=595782 width=182) (actual time=8415.898..9922.945 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
                     ->  Nested Loop  (cost=1571126.54..1665079.44 rows=595782 width=182) (actual time=8415.810..9570.596 rows=1145402 loops=1)
                           ->  Merge Join  (cost=1571126.39..1650485.77 rows=595782 width=160) (actual time=8415.786..9179.841 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..66679.15 rows=1499915 width=148) (actual time=0.029..323.020 rows=1499997 loops=1)
                                 ->  Sort  (cost=1571125.83..1572615.28 rows=595782 width=16) (actual time=8415.742..8518.580 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35280kB
                                       ->  Hash Join  (cost=284963.76..1513977.15 rows=595782 width=16) (actual time=1561.282..7963.242 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..1189944.34 rows=14883658 width=16) (actual time=0.043..4800.323 rows=14808183 loops=1)
                                                   Index Cond: (l_returnflag = 'R'::bpchar)
                                                   Heap Fetches: 0
                                             ->  Hash  (cost=277457.65..277457.65 rows=600444 width=8) (actual time=1559.985..1559.986 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=7182.99..277457.65 rows=600444 width=8) (actual time=109.916..1423.825 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7032.88 rows=600444 width=0) (actual time=63.314..63.314 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 2.961 ms
 Execution Time: 10724.523 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608177.34..608177.34 rows=1 width=36) (actual time=3441.363..3441.369 rows=0 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=293136.31..293136.32 rows=1 width=32) (actual time=1359.165..1359.169 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290736.71 rows=319947 width=10) (actual time=3.042..1295.419 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255208.86 rows=7998686 width=14) (actual time=0.019..599.789 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.981..2.983 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.622..2.590 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.612..2.250 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.404..0.404 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315041.01..315307.64 rows=106649 width=36) (actual time=3441.361..3441.364 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306584.08..314507.77 rows=106649 width=36) (actual time=3441.312..3441.315 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 7312kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290736.71 rows=319947 width=14) (actual time=40.320..1728.820 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255208.86 rows=7998686 width=18) (actual time=0.529..930.138 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=39.676..39.678 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=1.604..38.595 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.198..0.210 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=1.400..37.719 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=1.015..1.015 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 17.518 ms
 Execution Time: 3443.483 ms
(41 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=608177.34..608177.34 rows=1 width=36) (actual time=3034.849..3034.856 rows=0 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=293136.31..293136.32 rows=1 width=32) (actual time=1358.053..1358.056 rows=1 loops=1)
           ->  Hash Join  (cost=2341.31..290736.71 rows=319947 width=10) (actual time=3.011..1294.687 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255208.86 rows=7998686 width=14) (actual time=0.019..597.343 rows=8000000 loops=1)
                 ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=2.940..2.942 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.606..2.545 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.597..2.219 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.388..0.388 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=315041.01..315307.64 rows=106649 width=36) (actual time=3034.848..3034.850 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=306584.08..314507.77 rows=106649 width=36) (actual time=3034.799..3034.802 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 7312kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2341.31..290736.71 rows=319947 width=14) (actual time=3.792..1334.146 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255208.86 rows=7998686 width=18) (actual time=0.039..609.336 rows=8000000 loops=1)
                     ->  Hash  (cost=2291.31..2291.31 rows=4000 width=4) (actual time=3.709..3.710 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=4) (actual time=0.639..3.310 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=8) (actual time=0.626..2.973 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.411..0.411 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.331 ms
 Execution Time: 3036.883 ms
(41 rows)

query 12 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=687591.09..687591.09 rows=1 width=27) (actual time=5456.294..5456.296 rows=1 loops=1)
   ->  Sort  (cost=687591.09..687591.10 rows=7 width=27) (actual time=5456.292..5456.294 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=687590.98..687591.05 rows=7 width=27) (actual time=5456.263..5456.266 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=156000.80..682614.65 rows=284362 width=27) (actual time=1495.544..5348.084 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411269.27 rows=15000127 width=20) (actual time=0.466..1458.239 rows=15000000 loops=1)
                     ->  Hash  (cost=152446.28..152446.28 rows=284362 width=15) (actual time=1494.354..1494.355 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..152446.28 rows=284362 width=15) (actual time=0.332..1429.795 rows=311258 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
 Planning Time: 27.983 ms
 Execution Time: 5456.516 ms
(17 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=687591.09..687591.09 rows=1 width=27) (actual time=4665.642..4665.645 rows=1 loops=1)
   ->  Sort  (cost=687591.09..687591.10 rows=7 width=27) (actual time=4665.641..4665.643 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=687590.98..687591.05 rows=7 width=27) (actual time=4665.612..4665.615 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=156000.80..682614.65 rows=284362 width=27) (actual time=1241.174..4560.143 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411269.27 rows=15000127 width=20) (actual time=0.037..1023.577 rows=15000000 loops=1)
                     ->  Hash  (cost=152446.28..152446.28 rows=284362 width=15) (actual time=1240.458..1240.459 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..152446.28 rows=284362 width=15) (actual time=0.075..1181.726 rows=311258 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
 Planning Time: 1.826 ms
 Execution Time: 4665.809 ms
(17 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412763.03..1412763.03 rows=1 width=16) (actual time=16690.342..16690.345 rows=1 loops=1)
   ->  Sort  (cost=1412763.03..1412763.53 rows=200 width=16) (actual time=16690.340..16690.343 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412760.03..1412762.03 rows=200 width=16) (actual time=16690.304..16690.312 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260441.10..1390261.30 rows=1499915 width=12) (actual time=14522.898..16520.174 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55340.09..663371.66 rows=14697094 width=8) (actual time=374.022..10711.168 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448769.59 rows=14697094 width=8) (actual time=0.583..4867.951 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.15..30731.15 rows=1499915 width=4) (actual time=370.891..370.892 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.15 rows=1499915 width=4) (actual time=0.349..165.371 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 17.580 ms
 Execution Time: 16722.102 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1412763.03..1412763.03 rows=1 width=16) (actual time=16108.776..16108.779 rows=1 loops=1)
   ->  Sort  (cost=1412763.03..1412763.53 rows=200 width=16) (actual time=16108.774..16108.776 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1412760.03..1412762.03 rows=200 width=16) (actual time=16108.728..16108.736 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1260441.10..1390261.30 rows=1499915 width=12) (actual time=13978.260..15939.193 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 212480kB
                     ->  Hash Right Join  (cost=55340.09..663371.66 rows=14697094 width=8) (actual time=334.460..10167.369 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448769.59 rows=14697094 width=8) (actual time=0.036..4423.181 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30731.15..30731.15 rows=1499915 width=4) (actual time=331.913..331.913 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 2  Memory Usage: 42747kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30731.15 rows=1499915 width=4) (actual time=0.028..134.003 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.911 ms
 Execution Time: 16140.691 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1300303.45..1300303.47 rows=1 width=32) (actual time=5500.996..5500.997 rows=1 loops=1)
   ->  Aggregate  (cost=1300303.45..1300303.47 rows=1 width=32) (actual time=5500.994..5500.995 rows=1 loops=1)
         ->  Merge Join  (cost=69.98..1285650.98 rows=837284 width=33) (actual time=1.087..5153.707 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1201357.01 rows=837284 width=16) (actual time=0.827..4499.679 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68832.26 rows=1999989 width=25) (actual time=0.255..353.970 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 27.655 ms
 Execution Time: 5501.073 ms
(11 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1300303.45..1300303.47 rows=1 width=32) (actual time=4396.214..4396.215 rows=1 loops=1)
   ->  Aggregate  (cost=1300303.45..1300303.47 rows=1 width=32) (actual time=4396.212..4396.213 rows=1 loops=1)
         ->  Merge Join  (cost=69.98..1285650.98 rows=837284 width=33) (actual time=0.080..4070.862 rows=772942 loops=1)
               Merge Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Only Scan using q14_idx_1 on lineitem  (cost=0.56..1201357.01 rows=837284 width=16) (actual time=0.042..3498.336 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Fetches: 0
               ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..68832.26 rows=1999989 width=25) (actual time=0.034..286.500 rows=1999998 loops=1)
                     Heap Fetches: 0
 Planning Time: 2.133 ms
 Execution Time: 4396.280 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3766228.05..3766237.36 rows=1 width=103) (actual time=19512.613..19512.617 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=1883587.62..1883587.63 rows=1 width=32) (actual time=6304.179..6304.181 rows=1 loops=1)
           ->  HashAggregate  (cost=1881152.37..1882370.00 rows=97410 width=36) (actual time=6262.479..6298.442 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 43025kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=39978.55..1858894.82 rows=2225755 width=16) (actual time=357.746..4724.637 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39422.12 rows=2225755 width=0) (actual time=271.834..271.834 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1882640.42..1887171.73 rows=487 width=103) (actual time=19512.612..19512.613 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.389..20.503 rows=69998 loops=1)
         ->  Sort  (cost=1882640.13..1882641.35 rows=487 width=36) (actual time=19488.049..19488.050 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1881152.37..1882618.39 rows=487 width=36) (actual time=19462.545..19488.025 rows=1 loops=1)
                     ->  HashAggregate  (cost=1881152.37..1882613.52 rows=487 width=36) (actual time=19462.544..19488.023 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 43025kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=39978.55..1858894.82 rows=2225755 width=16) (actual time=413.479..11179.594 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39422.12 rows=2225755 width=0) (actual time=326.325..326.325 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 23.365 ms
 Execution Time: 19514.497 ms
(32 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3766228.05..3766237.36 rows=1 width=103) (actual time=13175.434..13175.437 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=1883587.62..1883587.63 rows=1 width=32) (actual time=6358.031..6358.033 rows=1 loops=1)
           ->  HashAggregate  (cost=1881152.37..1882370.00 rows=97410 width=36) (actual time=6316.331..6352.263 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 43025kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=39978.55..1858894.82 rows=2225755 width=16) (actual time=357.459..4774.914 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39422.12 rows=2225755 width=0) (actual time=271.491..271.492 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1882640.42..1887171.73 rows=487 width=103) (actual time=13175.432..13175.434 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4274.29 rows=100000 width=71) (actual time=0.045..12.388 rows=69998 loops=1)
         ->  Sort  (cost=1882640.13..1882641.35 rows=487 width=36) (actual time=13159.100..13159.101 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1881152.37..1882618.39 rows=487 width=36) (actual time=13134.469..13159.086 rows=1 loops=1)
                     ->  HashAggregate  (cost=1881152.37..1882613.52 rows=487 width=36) (actual time=13134.469..13159.084 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 43025kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=39978.55..1858894.82 rows=2225755 width=16) (actual time=377.607..5223.128 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39422.12 rows=2225755 width=0) (actual time=290.377..290.377 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 2.005 ms
 Execution Time: 13177.363 ms
(32 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=371834.14..371834.14 rows=1 width=44) (actual time=7364.091..7364.094 rows=1 loops=1)
   ->  Sort  (cost=371834.14..372220.40 rows=154502 width=44) (actual time=7364.090..7364.092 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=362002.70..371061.63 rows=154502 width=44) (actual time=6613.951..7359.580 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=362002.70..363505.48 rows=601113 width=40) (actual time=6613.904..7160.991 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98212.23..292561.54 rows=601113 width=40) (actual time=735.174..2812.429 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..187324.96 rows=3999343 width=8) (actual time=31.377..1332.839 rows=7995520 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=0.874..31.104 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.73..90980.73 rows=300604 width=40) (actual time=703.188..703.189 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.73 rows=300604 width=40) (actual time=0.675..631.090 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 20.975 ms
 Execution Time: 7372.114 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=371834.14..371834.14 rows=1 width=44) (actual time=7001.487..7001.490 rows=1 loops=1)
   ->  Sort  (cost=371834.14..372220.40 rows=154502 width=44) (actual time=7001.485..7001.488 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=362002.70..371061.63 rows=154502 width=44) (actual time=6240.611..6996.960 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=362002.70..363505.48 rows=601113 width=40) (actual time=6240.563..6786.830 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98212.23..292561.54 rows=601113 width=40) (actual time=531.045..2450.446 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..187324.96 rows=3999343 width=8) (actual time=19.072..1183.209 rows=7995520 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=0.088..19.003 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.73..90980.73 rows=300604 width=40) (actual time=511.385..511.386 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.73 rows=300604 width=40) (actual time=0.020..443.832 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 1.319 ms
 Execution Time: 7009.605 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1773126.79..1773126.81 rows=1 width=32) (actual time=25726.790..25726.793 rows=1 loops=1)
   ->  Aggregate  (cost=1773126.79..1773126.81 rows=1 width=32) (actual time=25726.788..25726.790 rows=1 loops=1)
         ->  Nested Loop  (cost=71093.36..1773077.55 rows=19698 width=8) (actual time=452.259..25723.943 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71092.80..1767012.73 rows=1970 width=40) (actual time=451.250..24634.345 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71092.23..71097.30 rows=2028 width=4) (actual time=441.298..442.562 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 49kB
                           ->  Seq Scan on part  (cost=0.00..70980.83 rows=2028 width=4) (actual time=1.177..441.014 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1691033.38 rows=1942908 width=36) (actual time=2.165..24034.603 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361936.96 rows=59990560 width=9) (actual time=0.892..15762.518 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.95 rows=10 width=17) (actual time=0.497..0.543 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 27.901 ms
 Execution Time: 25727.337 ms
(21 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1773126.79..1773126.81 rows=1 width=32) (actual time=23055.378..23055.380 rows=1 loops=1)
   ->  Aggregate  (cost=1773126.79..1773126.81 rows=1 width=32) (actual time=23055.376..23055.378 rows=1 loops=1)
         ->  Nested Loop  (cost=71093.36..1773077.55 rows=19698 width=8) (actual time=320.714..23054.522 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=71092.80..1767012.73 rows=1970 width=40) (actual time=320.677..23022.906 rows=1996 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=71092.23..71097.30 rows=2028 width=4) (actual time=313.356..313.828 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 49kB
                           ->  Seq Scan on part  (cost=0.00..70980.83 rows=2028 width=4) (actual time=0.143..313.117 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                     ->  GroupAggregate  (cost=0.56..1691033.38 rows=1942908 width=36) (actual time=0.085..22560.451 rows=1999332 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361936.96 rows=59990560 width=9) (actual time=0.049..14501.479 rows=59965964 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.95 rows=10 width=17) (actual time=0.013..0.015 rows=3 loops=1996)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 2.372 ms
 Execution Time: 23055.488 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7005573.36..7005573.61 rows=100 width=71) (actual time=30971.853..30971.867 rows=99 loops=1)
   ->  Sort  (cost=7005573.36..7055557.20 rows=19993537 width=71) (actual time=30971.852..30971.859 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  GroupAggregate  (cost=3380454.92..6241434.75 rows=19993537 width=71) (actual time=23304.849..30971.742 rows=99 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=3380454.92..5841564.01 rows=19993537 width=44) (actual time=23304.827..30971.444 rows=693 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 20  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=3380454.79..5116624.20 rows=19993537 width=44) (actual time=22960.269..30971.035 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=3380181.91..3392679.95 rows=4999213 width=43) (actual time=22785.843..22785.898 rows=99 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 31kB
                                 ->  Hash Join  (cost=78485.09..2714090.24 rows=4999213 width=43) (actual time=1802.662..22785.715 rows=99 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Merge Join  (cost=1.00..2555108.19 rows=4999213 width=24) (actual time=504.500..22100.404 rows=99 loops=1)
                                             Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Index Scan using orders_pkey on orders  (cost=0.43..568533.34 rows=15000127 width=20) (actual time=0.856..3402.380 rows=14982724 loops=1)
                                             ->  GroupAggregate  (cost=0.56..1886584.36 rows=4999213 width=4) (actual time=395.630..17828.043 rows=99 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 14999901
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361666.96 rows=59990560 width=9) (actual time=0.593..6756.495 rows=59986052 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=50946.15..50946.15 rows=1499915 width=23) (actual time=605.164..605.164 rows=1500000 loops=1)
                                             Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                                             ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=23) (actual time=0.668..333.744 rows=1500000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361666.96 rows=59990560 width=9) (actual time=0.050..5694.074 rows=59916431 loops=1)
                                 Heap Fetches: 0
 Planning Time: 33.057 ms
 Execution Time: 30972.124 ms
(33 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7005573.36..7005573.61 rows=100 width=71) (actual time=29485.979..29485.992 rows=99 loops=1)
   ->  Sort  (cost=7005573.36..7055557.20 rows=19993537 width=71) (actual time=29485.977..29485.985 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 31kB
         ->  GroupAggregate  (cost=3380454.92..6241434.75 rows=19993537 width=71) (actual time=21831.200..29485.860 rows=99 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=3380454.92..5841564.01 rows=19993537 width=44) (actual time=21831.188..29485.572 rows=693 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 20  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=3380454.79..5116624.20 rows=19993537 width=44) (actual time=21487.358..29485.171 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=3380181.91..3392679.95 rows=4999213 width=43) (actual time=21313.187..21313.242 rows=99 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 31kB
                                 ->  Hash Join  (cost=78485.09..2714090.24 rows=4999213 width=43) (actual time=1565.529..21313.073 rows=99 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Merge Join  (cost=1.00..2555108.19 rows=4999213 width=24) (actual time=437.726..20740.618 rows=99 loops=1)
                                             Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Index Scan using orders_pkey on orders  (cost=0.43..568533.34 rows=15000127 width=20) (actual time=0.038..2673.596 rows=14982724 loops=1)
                                             ->  GroupAggregate  (cost=0.56..1886584.36 rows=4999213 width=4) (actual time=350.211..17219.662 rows=99 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 14999901
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361666.96 rows=59990560 width=9) (actual time=0.023..6282.777 rows=59986052 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=50946.15..50946.15 rows=1499915 width=23) (actual time=492.412..492.413 rows=1500000 loops=1)
                                             Buckets: 1048576  Batches: 2  Memory Usage: 49242kB
                                             ->  Seq Scan on customer  (cost=0.00..50946.15 rows=1499915 width=23) (actual time=0.035..228.526 rows=1500000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361666.96 rows=59990560 width=9) (actual time=0.045..5685.828 rows=59916431 loops=1)
                                 Heap Fetches: 0
 Planning Time: 2.846 ms
 Execution Time: 29486.225 ms
(33 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=150693.44..150693.45 rows=1 width=32) (actual time=2689.789..2689.790 rows=1 loops=1)
   ->  Aggregate  (cost=150693.44..150693.45 rows=1 width=32) (actual time=2689.787..2689.788 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..150684.90 rows=1138 width=12) (actual time=12.036..2687.165 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125980.53 rows=4742 width=30) (actual time=1.614..824.918 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.20 rows=1 width=21) (actual time=0.386..0.388 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 1
                     Heap Fetches: 0
 Planning Time: 28.512 ms
 Execution Time: 2690.539 ms
(13 rows)

SET
SET
SET


 Limit  (cost=150693.44..150693.45 rows=1 width=32) (actual time=482.125..482.127 rows=1 loops=1)
   ->  Aggregate  (cost=150693.44..150693.45 rows=1 width=32) (actual time=482.124..482.125 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..150684.90 rows=1138 width=12) (actual time=1.217..481.518 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125980.53 rows=4742 width=30) (actual time=0.252..439.940 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.20 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=4781)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 1
                     Heap Fetches: 0
 Planning Time: 3.398 ms
 Execution Time: 482.205 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2780897.01..2780897.02 rows=1 width=51) (actual time=36825.772..36825.776 rows=1 loops=1)
   ->  Sort  (cost=2780897.01..2780897.02 rows=1 width=51) (actual time=36825.771..36825.774 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2577784.44..2780897.00 rows=1 width=51) (actual time=15711.340..36823.965 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183418712
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.516..27.019 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.250..0.253 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.260..19.460 rows=100000 loops=1)
               ->  Materialize  (cost=2577784.44..2776244.70 rows=3 width=8) (actual time=3.463..6.616 rows=44791 loops=4095)
                     Storage: Memory  Maximum Storage: 2356kB
                     ->  Hash Join  (cost=2577784.44..2776244.68 rows=3 width=8) (actual time=14179.259..20954.110 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2455087.37..2617161.96 rows=4851402 width=40) (actual time=13512.610..19471.820 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 32  Batches: 161  Memory Usage: 65809kB  Disk Usage: 358152kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2025001.40 rows=9144685 width=13) (actual time=0.744..9614.390 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=121485.15..121485.15 rows=80795 width=16) (actual time=666.228..666.229 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..121485.15 rows=80795 width=16) (actual time=0.051..643.200 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64306.24 rows=20202 width=4) (actual time=0.030..315.233 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.014..0.014 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 31.763 ms
 Execution Time: 36873.027 ms
(38 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2780897.01..2780897.02 rows=1 width=51) (actual time=34490.841..34490.845 rows=1 loops=1)
   ->  Sort  (cost=2780897.01..2780897.02 rows=1 width=51) (actual time=34490.839..34490.843 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2577784.44..2780897.00 rows=1 width=51) (actual time=13384.945..34489.084 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183418712
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.028..17.323 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.007..7.563 rows=100000 loops=1)
               ->  Materialize  (cost=2577784.44..2776244.70 rows=3 width=8) (actual time=2.896..6.048 rows=44791 loops=4095)
                     Storage: Memory  Maximum Storage: 2356kB
                     ->  Hash Join  (cost=2577784.44..2776244.68 rows=3 width=8) (actual time=11857.107..18629.430 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2455087.37..2617161.96 rows=4851402 width=40) (actual time=11564.980..17525.137 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 32  Batches: 161  Memory Usage: 65809kB  Disk Usage: 358152kB
                                 ->  Seq Scan on lineitem  (cost=0.00..2025001.40 rows=9144685 width=13) (actual time=0.039..7816.860 rows=9123688 loops=1)
                                       Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Filter: 50862364
                           ->  Hash  (cost=121485.15..121485.15 rows=80795 width=16) (actual time=291.719..291.720 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.86..121485.15 rows=80795 width=16) (actual time=0.066..272.554 rows=86872 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.43..64306.24 rows=20202 width=4) (actual time=0.027..208.373 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.64 rows=19 width=12) (actual time=0.002..0.002 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.748 ms
 Execution Time: 34530.396 ms
(38 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1066237.14..1066237.15 rows=1 width=34) (actual time=17460.546..17460.563 rows=100 loops=1)
   ->  Sort  (cost=1066237.14..1066237.15 rows=1 width=34) (actual time=17460.545..17460.553 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=1066237.11..1066237.13 rows=1 width=34) (actual time=17453.755..17459.346 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1066237.11..1066237.12 rows=1 width=26) (actual time=17453.745..17455.325 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 1537kB
                     ->  Nested Loop Semi Join  (cost=589145.48..1066237.10 rows=1 width=26) (actual time=7113.539..17292.789 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=589144.91..1066234.46 rows=1 width=38) (actual time=7113.532..13410.209 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=589144.48..1066232.01 rows=1 width=34) (actual time=7113.515..12716.604 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=589143.91..591143.60 rows=799874 width=34) (actual time=7113.480..7319.458 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68176kB
                                             ->  Hash Join  (cost=2341.88..495093.61 rows=799874 width=34) (actual time=39.215..6831.277 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409765.36 rows=19996853 width=8) (actual time=0.336..4121.440 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=38.844..38.846 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=1.417..37.428 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.162..0.166 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=1.242..36.481 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.797..0.797 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409765.36 rows=19996853 width=8) (actual time=0.025..3476.669 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.058..0.058 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 29.335 ms
 Execution Time: 17469.015 ms
(45 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1066237.14..1066237.15 rows=1 width=34) (actual time=12221.989..12222.002 rows=100 loops=1)
   ->  Sort  (cost=1066237.14..1066237.15 rows=1 width=34) (actual time=12221.987..12221.995 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=1066237.11..1066237.13 rows=1 width=34) (actual time=12215.218..12220.785 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=1066237.11..1066237.12 rows=1 width=26) (actual time=12215.210..12216.771 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 1537kB
                     ->  Nested Loop Semi Join  (cost=589145.48..1066237.10 rows=1 width=26) (actual time=6209.145..12058.466 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=589144.91..1066234.46 rows=1 width=38) (actual time=6209.137..11870.006 rows=65960 loops=1)
                                 ->  Merge Anti Join  (cost=589144.48..1066232.01 rows=1 width=34) (actual time=6209.120..11552.184 rows=134155 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 551044
                                       ->  Sort  (cost=589143.91..591143.60 rows=799874 width=34) (actual time=6209.085..6387.183 rows=1514267 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: external merge  Disk: 68176kB
                                             ->  Hash Join  (cost=2341.88..495093.61 rows=799874 width=34) (actual time=4.128..5942.828 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..409765.36 rows=19996853 width=8) (actual time=0.026..3391.438 rows=37929348 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=2291.31..2291.31 rows=4000 width=30) (actual time=4.074..4.075 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=39.29..2291.31 rows=4000 width=30) (actual time=0.630..3.522 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=39.29..2250.00 rows=4000 width=34) (actual time=0.616..3.134 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..38.29 rows=4000 width=0) (actual time=0.403..0.403 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..409765.36 rows=19996853 width=8) (actual time=0.024..3326.668 rows=37966635 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.002..0.003 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.698 ms
 Execution Time: 12230.983 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162398.72..162398.75 rows=1 width=72) (actual time=1810.799..1810.801 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=75439.10..75439.11 rows=1 width=32) (actual time=854.012..854.013 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75319.77 rows=47731 width=6) (actual time=0.025..821.803 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86959.61..87165.92 rows=7502 width=72) (actual time=1810.797..1810.798 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86959.61..86978.37 rows=7502 width=38) (actual time=1809.089..1809.431 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 3516kB
               ->  Nested Loop Anti Join  (cost=0.43..86476.74 rows=7502 width=38) (actual time=854.515..1790.162 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.77 rows=17499 width=26) (actual time=854.482..1345.715 rows=191129 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 18.389 ms
 Execution Time: 1811.152 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162398.72..162398.75 rows=1 width=72) (actual time=1478.651..1478.653 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=75439.10..75439.11 rows=1 width=32) (actual time=676.305..676.306 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75319.77 rows=47731 width=6) (actual time=0.011..645.395 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86959.61..87165.92 rows=7502 width=72) (actual time=1478.650..1478.651 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86959.61..86978.37 rows=7502 width=38) (actual time=1476.955..1477.299 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 3516kB
               ->  Nested Loop Anti Join  (cost=0.43..86476.74 rows=7502 width=38) (actual time=676.368..1459.517 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75319.77 rows=17499 width=26) (actual time=676.333..1144.553 rows=191129 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.65 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 1.099 ms
 Execution Time: 1478.880 ms
(20 rows)

