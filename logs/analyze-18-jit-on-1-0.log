query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394861.97..394861.97 rows=1 width=236) (actual time=6230.080..6230.081 rows=1 loops=1)
   ->  Sort  (cost=394861.97..394861.98 rows=6 width=236) (actual time=6186.825..6186.825 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394861.77..394861.93 rows=6 width=236) (actual time=6185.991..6185.997 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187568.25 rows=5922672 width=25) (actual time=0.670..1157.526 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 19.181 ms
 JIT:
   Functions: 10
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.709 ms (Deform 0.512 ms), Inlining 0.000 ms, Optimization 2.703 ms, Emission 40.591 ms, Total 45.003 ms
 Execution Time: 6501.815 ms
(16 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394861.97..394861.97 rows=1 width=236) (actual time=6018.747..6018.748 rows=1 loops=1)
   ->  Sort  (cost=394861.97..394861.98 rows=6 width=236) (actual time=6006.259..6006.260 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394861.77..394861.93 rows=6 width=236) (actual time=6006.207..6006.213 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187568.25 rows=5922672 width=25) (actual time=0.043..971.566 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 1.163 ms
 JIT:
   Functions: 10
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 0.987 ms (Deform 0.478 ms), Inlining 0.000 ms, Optimization 0.434 ms, Emission 12.078 ms, Total 13.500 ms
 Execution Time: 6034.257 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16598.71..16598.71 rows=1 width=192) (actual time=172.039..172.053 rows=100 loops=1)
   ->  Sort  (cost=16598.71..16598.71 rows=1 width=192) (actual time=172.038..172.046 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..16598.70 rows=1 width=192) (actual time=5.506..170.985 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.375..0.381 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.181..0.182 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.189..0.191 rows=25 loops=1)
               ->  Materialize  (cost=14.58..16596.00 rows=1 width=170) (actual time=0.400..34.032 rows=489 loops=5)
                     Storage: Memory  Maximum Storage: 113kB
                     ->  Nested Loop  (cost=14.58..16595.99 rows=1 width=170) (actual time=1.988..169.354 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..16594.72 rows=1 width=34) (actual time=1.583..126.586 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.83 rows=709 width=30) (actual time=0.294..25.409 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.72 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.122..0.122 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.108..0.120 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.085..0.117 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.082..0.109 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.077..0.079 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.086..0.086 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 24.101 ms
 Execution Time: 172.219 ms
(48 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16598.71..16598.71 rows=1 width=192) (actual time=27.740..27.754 rows=100 loops=1)
   ->  Sort  (cost=16598.71..16598.71 rows=1 width=192) (actual time=27.740..27.747 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Nested Loop  (cost=14.58..16598.70 rows=1 width=192) (actual time=0.224..27.370 rows=489 loops=1)
               Join Filter: (supplier.s_nationkey = nation.n_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.020..0.025 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=1)
               ->  Materialize  (cost=14.58..16596.00 rows=1 width=170) (actual time=0.019..5.403 rows=489 loops=5)
                     Storage: Memory  Maximum Storage: 113kB
                     ->  Nested Loop  (cost=14.58..16595.99 rows=1 width=170) (actual time=0.088..26.560 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..16594.72 rows=1 width=34) (actual time=0.080..25.267 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5439.83 rows=709 width=30) (actual time=0.014..8.803 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.72 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.018..0.018 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.013..0.017 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.006..0.015 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.350 ms
 Execution Time: 27.879 ms
(48 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=288018.82..288018.84 rows=10 width=44) (actual time=2161.961..2161.966 rows=10 loops=1)
   ->  Sort  (cost=288018.82..288819.79 rows=320390 width=44) (actual time=2112.836..2112.840 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=273335.86..281095.30 rows=320390 width=44) (actual time=2106.523..2110.815 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51628.46..254613.07 rows=320390 width=24) (actual time=817.649..2083.794 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187568.25 rows=3256749 width=16) (actual time=0.634..995.156 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49783.88..49783.88 rows=147566 width=12) (actual time=815.647..815.650 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12731.61..49783.88 rows=147566 width=12) (actual time=88.397..771.913 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6876.42..42033.22 rows=722064 width=16) (actual time=43.969..565.779 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6695.91 rows=722064 width=0) (actual time=39.827..39.827 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30655 width=4) (actual time=44.211..44.211 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30655 width=4) (actual time=0.476..39.883 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 26.959 ms
 JIT:
   Functions: 31
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.361 ms (Deform 0.861 ms), Inlining 0.000 ms, Optimization 2.870 ms, Emission 46.385 ms, Total 51.616 ms
 Execution Time: 2429.894 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=288018.82..288018.84 rows=10 width=44) (actual time=1393.756..1393.761 rows=10 loops=1)
   ->  Sort  (cost=288018.82..288819.79 rows=320390 width=44) (actual time=1374.072..1374.076 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=273335.86..281095.30 rows=320390 width=44) (actual time=1367.750..1372.024 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51628.46..254613.07 rows=320390 width=24) (actual time=292.832..1347.145 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187568.25 rows=3256749 width=16) (actual time=0.049..797.095 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49783.88..49783.88 rows=147566 width=12) (actual time=292.282..292.284 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12731.61..49783.88 rows=147566 width=12) (actual time=61.993..264.372 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6876.42..42033.22 rows=722064 width=16) (actual time=36.405..142.613 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6695.91 rows=722064 width=0) (actual time=32.837..32.837 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30655 width=4) (actual time=25.454..25.454 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30655 width=4) (actual time=0.020..21.940 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 1.823 ms
 JIT:
   Functions: 31
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.670 ms (Deform 0.845 ms), Inlining 0.000 ms, Optimization 0.843 ms, Emission 18.922 ms, Total 21.435 ms
 Execution Time: 1411.245 ms
(32 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76266.05..76266.06 rows=1 width=24) (actual time=988.013..988.015 rows=1 loops=1)
   ->  Sort  (cost=76266.05..76266.07 rows=5 width=24) (actual time=988.012..988.013 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=76265.98..76266.03 rows=5 width=24) (actual time=987.974..987.976 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=32397.32..75971.23 rows=58950 width=16) (actual time=484.438..977.494 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32396.88..32544.25 rows=58950 width=20) (actual time=484.223..488.292 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 3723kB
                           ->  Bitmap Heap Scan on orders  (cost=710.66..27725.92 rows=58950 width=20) (actual time=9.584..468.367 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..695.93 rows=58950 width=0) (actual time=5.799..5.799 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..37493.73 rows=2000220 width=4) (actual time=0.207..322.472 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 22.499 ms
 Execution Time: 989.031 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76266.05..76266.06 rows=1 width=24) (actual time=504.349..504.350 rows=1 loops=1)
   ->  Sort  (cost=76266.05..76266.07 rows=5 width=24) (actual time=504.347..504.349 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=76265.98..76266.03 rows=5 width=24) (actual time=504.315..504.317 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Merge Semi Join  (cost=32397.32..75971.23 rows=58950 width=16) (actual time=49.090..495.643 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32396.88..32544.25 rows=58950 width=20) (actual time=49.061..51.967 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 3723kB
                           ->  Bitmap Heap Scan on orders  (cost=710.66..27725.92 rows=58950 width=20) (actual time=7.313..41.114 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..695.93 rows=58950 width=0) (actual time=4.117..4.118 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..37493.73 rows=2000220 width=4) (actual time=0.021..271.295 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 1.572 ms
 Execution Time: 504.631 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=150247.95..150247.95 rows=1 width=58) (actual time=1240.327..1240.333 rows=1 loops=1)
   ->  Sort  (cost=150247.95..150248.01 rows=25 width=58) (actual time=1184.184..1184.189 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=150155.51..150247.82 rows=25 width=58) (actual time=1182.048..1184.146 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=150155.51..150173.91 rows=7360 width=38) (actual time=1181.492..1181.793 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 605kB
                     ->  Hash Join  (cost=9576.02..149682.80 rows=7360 width=38) (actual time=77.720..1176.894 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9103.02..148243.82 rows=183993 width=50) (actual time=72.083..1133.141 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9102.59..40005.38 rows=45993 width=38) (actual time=71.660..667.096 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2765.58..32346.07 rows=229966 width=8) (actual time=18.476..538.809 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2708.09 rows=229966 width=0) (actual time=14.378..14.378 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=52.998..53.002 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.899..46.576 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.409..30.638 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.464..0.466 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.454..0.460 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.183..0.185 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.237..0.238 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.215..0.217 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.009..0.009 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.562..5.563 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.312..4.309 rows=10000 loops=1)
 Planning Time: 31.669 ms
 JIT:
   Functions: 48
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.799 ms (Deform 0.923 ms), Inlining 0.000 ms, Optimization 3.018 ms, Emission 53.272 ms, Total 59.090 ms
 Execution Time: 1508.966 ms
(46 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=150247.95..150247.95 rows=1 width=58) (actual time=346.771..346.777 rows=1 loops=1)
   ->  Sort  (cost=150247.95..150248.01 rows=25 width=58) (actual time=322.005..322.010 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=150155.51..150247.82 rows=25 width=58) (actual time=319.932..321.968 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=150155.51..150173.91 rows=7360 width=38) (actual time=319.395..319.692 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 605kB
                     ->  Hash Join  (cost=9576.02..149682.80 rows=7360 width=38) (actual time=53.295..316.604 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9103.02..148243.82 rows=183993 width=50) (actual time=50.691..292.249 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9102.59..40005.38 rows=45993 width=38) (actual time=50.662..154.397 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2765.58..32346.07 rows=229966 width=8) (actual time=14.986..75.637 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2708.09 rows=229966 width=0) (actual time=11.412..11.412 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=35.556..35.559 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.089..29.920 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..9.610 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.070..0.072 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.059..0.064 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.038..0.039 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.529..2.529 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.018..1.385 rows=10000 loops=1)
 Planning Time: 5.040 ms
 JIT:
   Functions: 48
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.117 ms (Deform 0.902 ms), Inlining 0.000 ms, Optimization 0.747 ms, Emission 24.112 ms, Total 26.976 ms
 Execution Time: 364.097 ms
(46 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116121.61..116121.62 rows=1 width=32) (actual time=1302.071..1302.073 rows=1 loops=1)
   ->  Aggregate  (cost=116121.61..116121.62 rows=1 width=32) (actual time=1265.907..1265.907 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22351.88..115533.13 rows=117695 width=12) (actual time=130.967..1205.209 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22322.46 rows=117695 width=0) (actual time=119.660..119.661 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 21.655 ms
 JIT:
   Functions: 6
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.064 ms (Deform 0.273 ms), Inlining 0.000 ms, Optimization 2.604 ms, Emission 33.598 ms, Total 37.265 ms
 Execution Time: 1578.215 ms
(13 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116121.61..116121.62 rows=1 width=32) (actual time=214.679..214.680 rows=1 loops=1)
   ->  Aggregate  (cost=116121.61..116121.62 rows=1 width=32) (actual time=207.665..207.666 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22351.88..115533.13 rows=117695 width=12) (actual time=98.574..179.866 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22322.46 rows=117695 width=0) (actual time=87.954..87.954 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.075 ms
 JIT:
   Functions: 6
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 0.536 ms (Deform 0.247 ms), Inlining 0.000 ms, Optimization 0.324 ms, Emission 6.725 ms, Total 7.585 ms
 Execution Time: 229.884 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238271.65..238271.68 rows=1 width=116) (actual time=3207.356..3207.362 rows=1 loops=1)
   ->  GroupAggregate  (cost=238271.65..238470.65 rows=6123 width=116) (actual time=3142.159..3142.165 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=238271.65..238286.96 rows=6123 width=96) (actual time=3140.735..3140.794 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 685kB
               ->  Hash Join  (cost=88566.78..237886.51 rows=6123 width=96) (actual time=684.621..3135.057 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88201.68..236718.91 rows=147140 width=46) (actual time=678.612..3098.937 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33036.78..173185.57 rows=1839253 width=24) (actual time=205.865..2359.226 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32576.96 rows=1839253 width=0) (actual time=185.003..185.004 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=472.035..472.038 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=47.822..446.500 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.812..227.483 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=46.924..46.926 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.767..44.749 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.698..31.471 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.051..0.052 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.041..0.043 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.421..5.422 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.646..5.316 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.346..4.098 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.276..0.276 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.257..0.261 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 30.941 ms
 JIT:
   Functions: 60
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 3.512 ms (Deform 1.394 ms), Inlining 0.000 ms, Optimization 3.190 ms, Emission 62.181 ms, Total 68.883 ms
 Execution Time: 3481.356 ms
(48 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238271.65..238271.68 rows=1 width=116) (actual time=997.906..997.913 rows=1 loops=1)
   ->  GroupAggregate  (cost=238271.65..238470.65 rows=6123 width=116) (actual time=962.902..962.909 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=238271.65..238286.96 rows=6123 width=96) (actual time=962.234..962.293 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 685kB
               ->  Hash Join  (cost=88566.78..237886.51 rows=6123 width=96) (actual time=438.831..958.350 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=88201.68..236718.91 rows=147140 width=46) (actual time=436.796..938.215 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=33036.78..173185.57 rows=1839253 width=24) (actual time=140.051..435.873 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32576.96 rows=1839253 width=0) (actual time=119.800..119.800 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=296.329..296.333 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=28.198..273.457 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.012..84.690 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=28.114..28.117 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.054..26.254 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..9.294 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.040..0.041 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.032..0.034 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.946..1.947 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.055..1.858 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..0.642 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.033..0.034 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.024..0.026 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 3.718 ms
 JIT:
   Functions: 60
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.925 ms (Deform 1.389 ms), Inlining 0.000 ms, Optimization 1.273 ms, Emission 33.847 ms, Total 38.045 ms
 Execution Time: 1015.877 ms
(48 rows)

query 8 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57625.28..57625.33 rows=1 width=64) (actual time=1115.067..1115.073 rows=1 loops=1)
   ->  GroupAggregate  (cost=57625.28..57727.99 rows=2405 width=64) (actual time=1115.065..1115.071 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=57625.28..57631.35 rows=2427 width=70) (actual time=1114.467..1114.523 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 252kB
               ->  Nested Loop  (cost=22494.12..57488.83 rows=2427 width=70) (actual time=533.268..1112.572 rows=2485 loops=1)
                     ->  Hash Join  (cost=22493.97..57394.34 rows=2427 width=20) (actual time=533.244..1108.274 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=22045.97..56939.97 rows=2427 width=20) (actual time=527.617..1101.272 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=15708.96..50533.19 rows=12134 width=24) (actual time=476.056..1045.818 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5498.40..38486.92 rows=457168 width=12) (actual time=31.692..519.547 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5384.11 rows=457168 width=0) (actual time=27.475..27.476 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9712.89..9712.89 rows=39814 width=20) (actual time=444.059..444.061 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.85..9712.89 rows=39814 width=20) (actual time=1.888..426.207 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5401.69 rows=1327 width=4) (actual time=0.738..38.608 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.229..0.287 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=51.448..51.450 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.951..46.641 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.471..31.303 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.450..0.452 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.436..0.445 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.201..0.205 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.194..0.194 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.185..0.186 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.565..5.566 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.292..4.283 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 35.547 ms
 Execution Time: 1115.412 ms
(53 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=57625.28..57625.33 rows=1 width=64) (actual time=229.924..229.930 rows=1 loops=1)
   ->  GroupAggregate  (cost=57625.28..57727.99 rows=2405 width=64) (actual time=229.923..229.929 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=57625.28..57631.35 rows=2427 width=70) (actual time=229.370..229.423 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 252kB
               ->  Nested Loop  (cost=22494.12..57488.83 rows=2427 width=70) (actual time=88.497..228.373 rows=2485 loops=1)
                     ->  Hash Join  (cost=22493.97..57394.34 rows=2427 width=20) (actual time=88.479..226.418 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=22045.97..56939.97 rows=2427 width=20) (actual time=85.880..222.775 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=15708.96..50533.19 rows=12134 width=24) (actual time=53.517..187.329 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5498.40..38486.92 rows=457168 width=12) (actual time=24.622..103.633 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5384.11 rows=457168 width=0) (actual time=21.045..21.045 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9712.89..9712.89 rows=39814 width=20) (actual time=28.699..28.701 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.85..9712.89 rows=39814 width=20) (actual time=0.048..21.624 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5401.69 rows=1327 width=4) (actual time=0.029..9.061 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.003..0.007 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=32.258..32.260 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.061..28.688 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.008..9.790 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.041..0.042 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.034..0.039 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.536..2.537 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.345 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 5.517 ms
 Execution Time: 230.263 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142504.74..142504.74 rows=1 width=90) (actual time=2255.139..2255.144 rows=1 loops=1)
   ->  Sort  (cost=142504.74..142655.05 rows=60125 width=90) (actual time=2201.939..2201.944 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=141302.24..142204.11 rows=60125 width=90) (actual time=2201.405..2201.832 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=79655.77..134938.01 rows=363670 width=81) (actual time=1055.268..1958.435 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=79654.21..132910.81 rows=363670 width=31) (actual time=1054.982..1855.254 rows=325928 loops=1)
                           Hash Cond: ((supplier.s_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                           ->  Hash Join  (cost=49495.78..100843.11 rows=363670 width=41) (actual time=797.816..1473.908 rows=325928 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=49047.78..99440.08 rows=363670 width=33) (actual time=791.982..1387.963 rows=325928 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.860..234.909 rows=1500000 loops=1)
                                       ->  Hash  (cost=44501.90..44501.90 rows=363670 width=33) (actual time=790.492..790.493 rows=325928 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25716kB
                                             ->  Nested Loop  (cost=0.85..44501.90 rows=363670 width=33) (actual time=2.527..700.111 rows=325928 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=12121 width=4) (actual time=0.049..51.756 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.044..0.057 rows=30 loops=10880)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.763..5.764 rows=10000 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.465..4.511 rows=10000 loops=1)
                           ->  Hash  (cost=18158.42..18158.42 rows=800000 width=14) (actual time=255.919..255.919 rows=800000 loops=1)
                                 Buckets: 1048576  Batches: 1  Memory Usage: 45692kB
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18158.42 rows=800000 width=14) (actual time=0.386..109.996 rows=800000 loops=1)
                                       Heap Fetches: 0
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.271..0.272 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.244..0.249 rows=25 loops=1)
 Planning Time: 38.064 ms
 JIT:
   Functions: 42
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.950 ms (Deform 0.745 ms), Inlining 0.000 ms, Optimization 2.791 ms, Emission 50.576 ms, Total 56.317 ms
 Execution Time: 2545.709 ms
(42 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=142504.74..142504.74 rows=1 width=90) (actual time=1508.447..1508.452 rows=1 loops=1)
   ->  Sort  (cost=142504.74..142655.05 rows=60125 width=90) (actual time=1487.155..1487.160 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=141302.24..142204.11 rows=60125 width=90) (actual time=1486.660..1487.058 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=79655.77..134938.01 rows=363670 width=81) (actual time=460.832..1247.487 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=79654.21..132910.81 rows=363670 width=31) (actual time=460.788..1144.463 rows=325928 loops=1)
                           Hash Cond: ((supplier.s_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                           ->  Hash Join  (cost=49495.78..100843.11 rows=363670 width=41) (actual time=230.995..798.865 rows=325928 loops=1)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=49047.78..99440.08 rows=363670 width=33) (actual time=228.410..724.599 rows=325928 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..96.099 rows=1500000 loops=1)
                                       ->  Hash  (cost=44501.90..44501.90 rows=363670 width=33) (actual time=227.779..227.781 rows=325928 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25716kB
                                             ->  Nested Loop  (cost=0.85..44501.90 rows=363670 width=33) (actual time=0.072..149.874 rows=325928 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=12121 width=4) (actual time=0.040..37.421 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.003..0.008 rows=30 loops=10880)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.519..2.519 rows=10000 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.034..1.326 rows=10000 loops=1)
                           ->  Hash  (cost=18158.42..18158.42 rows=800000 width=14) (actual time=228.623..228.623 rows=800000 loops=1)
                                 Buckets: 1048576  Batches: 1  Memory Usage: 45692kB
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18158.42 rows=800000 width=14) (actual time=0.049..87.196 rows=800000 loops=1)
                                       Heap Fetches: 0
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.030..0.030 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.020 rows=25 loops=1)
 Planning Time: 6.938 ms
 JIT:
   Functions: 42
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.986 ms (Deform 0.706 ms), Inlining 0.000 ms, Optimization 0.709 ms, Emission 20.713 ms, Total 23.408 ms
 Execution Time: 1528.066 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162640.89..162640.94 rows=20 width=202) (actual time=1673.259..1673.266 rows=20 loops=1)
   ->  Sort  (cost=162640.89..162779.87 rows=55592 width=202) (actual time=1626.974..1626.980 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=160466.70..161161.60 rows=55592 width=202) (actual time=1597.100..1615.101 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=35322.16..159771.80 rows=55592 width=182) (actual time=586.454..1504.082 rows=114347 loops=1)
                     ->  Hash Join  (cost=35322.01..158383.71 rows=55592 width=160) (actual time=586.253..1453.111 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28350.01..151265.78 rows=55592 width=16) (actual time=496.840..1319.486 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..119015.01 rows=1486163 width=16) (actual time=0.301..657.508 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27648.21..27648.21 rows=56110 width=8) (actual time=496.265..496.266 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=675.56..27648.21 rows=56110 width=8) (actual time=9.719..476.967 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..661.53 rows=56110 width=0) (actual time=5.857..5.857 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=89.111..89.112 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.665..41.747 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.009..0.009 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 26.654 ms
 JIT:
   Functions: 35
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.300 ms (Deform 0.616 ms), Inlining 0.000 ms, Optimization 2.537 ms, Emission 43.863 ms, Total 48.700 ms
 Execution Time: 1946.083 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=162640.89..162640.94 rows=20 width=202) (actual time=906.548..906.566 rows=20 loops=1)
   ->  Sort  (cost=162640.89..162779.87 rows=55592 width=202) (actual time=888.840..888.857 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=160466.70..161161.60 rows=55592 width=202) (actual time=858.607..877.048 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=35322.16..159771.80 rows=55592 width=182) (actual time=118.555..778.450 rows=114347 loops=1)
                     ->  Hash Join  (cost=35322.01..158383.71 rows=55592 width=160) (actual time=118.521..734.941 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28350.01..151265.78 rows=55592 width=16) (actual time=46.823..623.595 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..119015.01 rows=1486163 width=16) (actual time=0.028..431.512 rows=1478870 loops=1)
                                       Index Cond: (l_returnflag = 'R'::bpchar)
                                       Heap Fetches: 0
                                 ->  Hash  (cost=27648.21..27648.21 rows=56110 width=8) (actual time=46.551..46.552 rows=57111 loops=1)
                                       Buckets: 65536  Batches: 1  Memory Usage: 2743kB
                                       ->  Bitmap Heap Scan on orders  (cost=675.56..27648.21 rows=56110 width=8) (actual time=7.232..38.607 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=23377
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..661.53 rows=56110 width=0) (actual time=4.026..4.026 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=71.395..71.406 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.021..25.585 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..1.17 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 2.226 ms
 JIT:
   Functions: 35
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.608 ms (Deform 0.651 ms), Inlining 0.000 ms, Optimization 0.605 ms, Emission 17.188 ms, Total 19.401 ms
 Execution Time: 925.068 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20113.13..20113.13 rows=1 width=36) (actual time=725.433..725.439 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=9749.89..9749.91 rows=1 width=32) (actual time=28.047..28.049 rows=1 loops=1)
           ->  Nested Loop  (cost=5.81..9509.89 rows=32000 width=10) (actual time=0.071..21.047 rows=32880 loops=1)
                 ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.059..0.320 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=5.38..227.14 rows=400 width=8) (actual time=0.044..0.260 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.025..0.026 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.002..0.042 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10363.23..10389.89 rows=10667 width=36) (actual time=725.432..725.434 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=9829.89..10309.89 rows=10667 width=36) (actual time=713.167..725.248 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.89 rows=32000 width=14) (actual time=1.102..653.298 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.672..4.276 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.191..0.194 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.477..3.967 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.271..0.271 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.051..1.561 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 16.272 ms
 Execution Time: 726.470 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20113.13..20113.13 rows=1 width=36) (actual time=89.316..89.322 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=9749.89..9749.91 rows=1 width=32) (actual time=27.955..27.958 rows=1 loops=1)
           ->  Nested Loop  (cost=5.81..9509.89 rows=32000 width=10) (actual time=0.068..20.923 rows=32880 loops=1)
                 ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.057..0.314 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.016 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=5.38..227.14 rows=400 width=8) (actual time=0.043..0.254 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.024..0.024 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.002..0.042 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10363.23..10389.89 rows=10667 width=36) (actual time=89.315..89.317 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=9829.89..10309.89 rows=10667 width=36) (actual time=77.073..89.129 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.81..9509.89 rows=32000 width=14) (actual time=0.080..30.816 rows=32880 loops=1)
                     ->  Nested Loop  (cost=5.38..232.45 rows=400 width=4) (actual time=0.069..0.508 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=8) (actual time=0.051..0.432 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.031..0.031 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.063 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.389 ms
 Execution Time: 90.382 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68868.25..68868.25 rows=1 width=27) (actual time=582.061..582.063 rows=1 loops=1)
   ->  Sort  (cost=68868.25..68868.27 rows=7 width=27) (actual time=582.059..582.061 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=68868.15..68868.22 rows=7 width=27) (actual time=582.019..582.021 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=15685.00..68357.67 rows=29170 width=27) (actual time=151.740..570.917 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.682..226.428 rows=1500000 loops=1)
                     ->  Hash  (cost=15320.38..15320.38 rows=29170 width=15) (actual time=150.823..150.823 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..15320.38 rows=29170 width=15) (actual time=0.374..144.802 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
 Planning Time: 22.151 ms
 Execution Time: 582.223 ms
(17 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68868.25..68868.25 rows=1 width=27) (actual time=391.802..391.804 rows=1 loops=1)
   ->  Sort  (cost=68868.25..68868.27 rows=7 width=27) (actual time=391.800..391.802 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=68868.15..68868.22 rows=7 width=27) (actual time=391.771..391.773 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               Batches: 1  Memory Usage: 24kB
               ->  Hash Join  (cost=15685.00..68357.67 rows=29170 width=27) (actual time=124.039..381.623 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.009..83.908 rows=1500000 loops=1)
                     ->  Hash  (cost=15320.38..15320.38 rows=29170 width=15) (actual time=123.898..123.899 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..15320.38 rows=29170 width=15) (actual time=0.062..118.951 rows=30953 loops=1)
                                 Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Heap Fetches: 0
 Planning Time: 1.714 ms
 Execution Time: 391.931 ms
(17 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1389.197..1389.200 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1389.195..1389.198 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1389.161..1389.168 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1350.229..1372.463 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=36.452..996.760 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.891..554.030 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=35.243..35.243 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.312..17.234 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.890 ms
 Execution Time: 1390.831 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64793.97..64793.97 rows=1 width=16) (actual time=1272.271..1272.274 rows=1 loops=1)
   ->  Sort  (cost=64793.97..64794.47 rows=200 width=16) (actual time=1272.269..1272.272 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64790.97..64792.97 rows=200 width=16) (actual time=1272.229..1272.236 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61040.97..62540.97 rows=150000 width=12) (actual time=1231.975..1255.149 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4953.42..53692.49 rows=1469697 width=8) (actual time=30.208..884.623 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.015..463.034 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=29.851..29.852 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.024..13.570 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.003 ms
 Execution Time: 1273.729 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87014.74..87014.75 rows=1 width=32) (actual time=835.188..835.190 rows=1 loops=1)
   ->  Aggregate  (cost=87014.74..87014.75 rows=1 width=32) (actual time=835.186..835.188 rows=1 loops=1)
         ->  Hash Join  (cost=10000.44..85650.57 rows=77952 width=33) (actual time=104.677..783.464 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1401.44..76846.95 rows=77952 width=16) (actual time=19.714..649.804 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1381.95 rows=77952 width=0) (actual time=13.032..13.033 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=84.609..84.610 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.284..46.748 rows=200000 loops=1)
 Planning Time: 25.429 ms
 Execution Time: 835.387 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87014.74..87014.75 rows=1 width=32) (actual time=181.152..181.155 rows=1 loops=1)
   ->  Aggregate  (cost=87014.74..87014.75 rows=1 width=32) (actual time=181.150..181.153 rows=1 loops=1)
         ->  Hash Join  (cost=10000.44..85650.57 rows=77952 width=33) (actual time=72.459..153.942 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1401.44..76846.95 rows=77952 width=16) (actual time=14.265..66.708 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1381.95 rows=77952 width=0) (actual time=8.159..8.160 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=57.848..57.849 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..25.734 rows=200000 loops=1)
 Planning Time: 1.577 ms
 Execution Time: 181.350 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245121.67..245130.86 rows=1 width=103) (actual time=1545.672..1545.676 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122609.67..122609.68 rows=1 width=32) (actual time=213.761..213.762 rows=1 loops=1)
           ->  HashAggregate  (cost=122359.97..122484.82 rows=9988 width=36) (actual time=210.554..213.181 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4098.17..120079.25 rows=228072 width=16) (actual time=29.199..104.459 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4041.15 rows=228072 width=0) (actual time=18.526..18.526 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122511.99..122971.74 rows=50 width=103) (actual time=1495.245..1495.247 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.382..4.767 rows=8449 loops=1)
         ->  Sort  (cost=122511.70..122511.83 rows=50 width=36) (actual time=1489.932..1489.933 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122359.97..122510.29 rows=50 width=36) (actual time=1487.542..1489.923 rows=1 loops=1)
                     ->  HashAggregate  (cost=122359.97..122509.79 rows=50 width=36) (actual time=1487.539..1489.919 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4098.17..120079.25 rows=228072 width=16) (actual time=40.753..1082.327 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4041.15 rows=228072 width=0) (actual time=29.484..29.484 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 19.318 ms
 JIT:
   Functions: 30
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.116 ms (Deform 0.891 ms), Inlining 0.000 ms, Optimization 2.729 ms, Emission 47.841 ms, Total 52.686 ms
 Execution Time: 1819.140 ms
(34 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245121.67..245130.86 rows=1 width=103) (actual time=475.737..475.740 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122609.67..122609.68 rows=1 width=32) (actual time=211.503..211.504 rows=1 loops=1)
           ->  HashAggregate  (cost=122359.97..122484.82 rows=9988 width=36) (actual time=208.359..210.911 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4098.17..120079.25 rows=228072 width=16) (actual time=28.353..103.572 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4041.15 rows=228072 width=0) (actual time=17.764..17.764 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122511.99..122971.74 rows=50 width=103) (actual time=455.799..455.800 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.032..1.365 rows=8449 loops=1)
         ->  Sort  (cost=122511.70..122511.83 rows=50 width=36) (actual time=453.950..453.951 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122359.97..122510.29 rows=50 width=36) (actual time=451.619..453.942 rows=1 loops=1)
                     ->  HashAggregate  (cost=122359.97..122509.79 rows=50 width=36) (actual time=451.616..453.938 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4098.17..120079.25 rows=228072 width=16) (actual time=28.992..130.803 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4041.15 rows=228072 width=0) (actual time=18.278..18.278 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 1.462 ms
 JIT:
   Functions: 30
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.682 ms (Deform 0.885 ms), Inlining 0.000 ms, Optimization 0.774 ms, Emission 19.275 ms, Total 21.731 ms
 Execution Time: 492.429 ms
(34 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34717.50..34717.50 rows=1 width=44) (actual time=661.152..661.164 rows=1 loops=1)
   ->  Sort  (cost=34717.50..34756.81 rows=15726 width=44) (actual time=661.151..661.162 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33766.63..34638.87 rows=15726 width=44) (actual time=627.931..658.236 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33766.63..33909.63 rows=57198 width=40) (actual time=627.918..634.080 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10033kB
                     ->  Hash Join  (cost=9804.91..29246.94 rows=57198 width=40) (actual time=75.957..285.753 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=5.526..144.094 rows=799680 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.114..5.257 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=28599 width=40) (actual time=70.299..70.309 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=28599 width=40) (actual time=0.272..63.639 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 20.068 ms
 Execution Time: 661.649 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34717.50..34717.50 rows=1 width=44) (actual time=622.740..622.752 rows=1 loops=1)
   ->  Sort  (cost=34717.50..34756.81 rows=15726 width=44) (actual time=622.738..622.750 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33766.63..34638.87 rows=15726 width=44) (actual time=589.231..619.847 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33766.63..33909.63 rows=57198 width=40) (actual time=589.219..595.309 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10033kB
                     ->  Hash Join  (cost=9804.91..29246.94 rows=57198 width=40) (actual time=52.276..247.853 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=1.956..127.680 rows=799680 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..1.924 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=28599 width=40) (actual time=50.196..50.205 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=28599 width=40) (actual time=0.011..44.442 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 1.247 ms
 Execution Time: 623.141 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=177259.86..177259.87 rows=1 width=32) (actual time=2437.453..2437.457 rows=1 loops=1)
   ->  Aggregate  (cost=177259.86..177259.87 rows=1 width=32) (actual time=2399.225..2399.228 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.37..177255.11 rows=1900 width=8) (actual time=54.512..2398.907 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7106.94..176731.55 rows=190 width=40) (actual time=53.827..2280.396 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7106.51..7107.00 rows=197 width=4) (actual time=45.849..45.966 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=0.981..45.813 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169140.08 rows=192830 width=36) (actual time=0.762..2218.514 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136244.33 rows=6000660 width=9) (actual time=0.705..1387.866 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.528..0.567 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 22.577 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.281 ms (Deform 0.221 ms), Inlining 0.000 ms, Optimization 2.292 ms, Emission 36.041 ms, Total 39.613 ms
 Execution Time: 2708.828 ms
(25 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=177259.86..177259.87 rows=1 width=32) (actual time=2059.442..2059.444 rows=1 loops=1)
   ->  Aggregate  (cost=177259.86..177259.87 rows=1 width=32) (actual time=2050.161..2050.162 rows=1 loops=1)
         ->  Nested Loop  (cost=7107.37..177255.11 rows=1900 width=8) (actual time=30.753..2050.062 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7106.94..176731.55 rows=190 width=40) (actual time=30.729..2048.328 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7106.51..7107.00 rows=197 width=4) (actual time=24.423..24.458 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=0.111..24.398 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169140.08 rows=192830 width=36) (actual time=0.055..2011.191 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136244.33 rows=6000660 width=9) (actual time=0.022..1203.641 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 1.799 ms
 JIT:
   Functions: 20
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 0.819 ms (Deform 0.203 ms), Inlining 0.000 ms, Optimization 0.352 ms, Emission 8.993 ms, Total 10.165 ms
 Execution Time: 2074.875 ms
(25 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669337.12..669337.37 rows=100 width=71) (actual time=3206.821..3206.826 rows=9 loops=1)
   ->  Sort  (cost=669337.12..674338.22 rows=2000440 width=71) (actual time=2828.720..2828.724 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306651.19..592881.75 rows=2000440 width=71) (actual time=2693.528..2828.668 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306651.19..552872.95 rows=2000440 width=44) (actual time=2693.494..2828.617 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306651.06..480368.55 rows=2000440 width=44) (actual time=2367.662..2828.579 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306650.51..307900.65 rows=500055 width=43) (actual time=2203.280..2203.288 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201944.79..248325.98 rows=500055 width=43) (actual time=1906.795..2203.258 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194972.79..240041.31 rows=500055 width=24) (actual time=1844.826..2141.276 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.891..223.257 rows=1500000 loops=1)
                                             ->  Hash  (cost=188722.11..188722.11 rows=500055 width=4) (actual time=1759.532..1759.533 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188722.11 rows=500055 width=4) (actual time=374.342..1759.512 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136216.33 rows=6000660 width=9) (actual time=0.314..728.294 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=61.231..61.232 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.563..34.042 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136216.33 rows=6000660 width=9) (actual time=0.028..424.653 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 26.168 ms
 JIT:
   Functions: 32
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 2.247 ms (Deform 0.652 ms), Inlining 83.526 ms, Optimization 163.787 ms, Emission 130.964 ms, Total 380.524 ms
 Execution Time: 3475.532 ms
(39 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=669337.12..669337.37 rows=100 width=71) (actual time=2796.453..2796.458 rows=9 loops=1)
   ->  Sort  (cost=669337.12..674338.22 rows=2000440 width=71) (actual time=2480.148..2480.153 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=306651.19..592881.75 rows=2000440 width=71) (actual time=2345.244..2480.098 rows=9 loops=1)
               Group Key: orders.o_orderkey, customer.c_custkey
               ->  Incremental Sort  (cost=306651.19..552872.95 rows=2000440 width=44) (actual time=2345.208..2480.046 rows=63 loops=1)
                     Sort Key: orders.o_orderkey, customer.c_custkey
                     Presorted Key: orders.o_orderkey
                     Full-sort Groups: 2  Sort Method: quicksort  Average Memory: 27kB  Peak Memory: 27kB
                     ->  Merge Join  (cost=306651.06..480368.55 rows=2000440 width=44) (actual time=2019.609..2480.008 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Sort  (cost=306650.51..307900.65 rows=500055 width=43) (actual time=1855.668..1855.677 rows=9 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Hash Join  (cost=201944.79..248325.98 rows=500055 width=43) (actual time=1660.369..1855.654 rows=9 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=194972.79..240041.31 rows=500055 width=24) (actual time=1618.533..1813.806 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.010..81.945 rows=1500000 loops=1)
                                             ->  Hash  (cost=188722.11..188722.11 rows=500055 width=4) (actual time=1565.504..1565.505 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..188722.11 rows=500055 width=4) (actual time=329.544..1565.485 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136216.33 rows=6000660 width=9) (actual time=0.023..559.112 rows=6001215 loops=1)
                                                               Heap Fetches: 0
                                       ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=41.083..41.083 rows=150000 loops=1)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.025..17.181 rows=150000 loops=1)
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136216.33 rows=6000660 width=9) (actual time=0.019..425.216 rows=4807580 loops=1)
                                 Heap Fetches: 0
 Planning Time: 2.129 ms
 JIT:
   Functions: 32
   Options: Inlining true, Optimization true, Expressions true, Deforming true
   Timing: Generation 1.492 ms (Deform 0.604 ms), Inlining 68.787 ms, Optimization 146.231 ms, Emission 101.430 ms, Total 317.940 ms
 Execution Time: 2813.305 ms
(39 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=15180.24..15180.25 rows=1 width=32) (actual time=254.021..254.022 rows=1 loops=1)
   ->  Aggregate  (cost=15180.24..15180.25 rows=1 width=32) (actual time=254.020..254.020 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..15179.34 rows=119 width=12) (actual time=2.387..253.038 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=497 width=30) (actual time=1.777..73.817 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.349..0.352 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 1
                     Heap Fetches: 0
 Planning Time: 25.571 ms
 Execution Time: 254.105 ms
(13 rows)

SET
SET
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15180.24..15180.25 rows=1 width=32) (actual time=49.207..49.209 rows=1 loops=1)
   ->  Aggregate  (cost=15180.24..15180.25 rows=1 width=32) (actual time=49.206..49.207 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..15179.34 rows=119 width=12) (actual time=0.259..49.129 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=497 width=30) (actual time=0.194..44.713 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..5.18 rows=1 width=21) (actual time=0.008..0.008 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 1
                     Heap Fetches: 0
 Planning Time: 3.125 ms
 Execution Time: 49.276 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215850.34..215850.34 rows=1 width=51) (actual time=3492.959..3492.963 rows=1 loops=1)
   ->  Sort  (cost=215850.34..215850.34 rows=1 width=51) (actual time=3444.361..3444.364 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192262.71..215850.33 rows=1 width=51) (actual time=3292.053..3444.163 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.603..3.157 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.252..0.255 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.327..2.185 rows=10000 loops=1)
               ->  Materialize  (cost=192262.71..215395.02 rows=1 width=8) (actual time=5.609..7.651 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=192262.71..215395.01 rows=1 width=8) (actual time=2456.524..3285.847 rows=5898 loops=1)
                           ->  Hash Join  (cost=192262.29..209759.64 rows=4903 width=44) (actual time=2456.096..2977.697 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=185798.62..202021.61 rows=485462 width=40) (actual time=2424.609..2902.569 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16444.97..142738.45 rows=915565 width=13) (actual time=124.627..1880.183 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16216.08 rows=915565 width=0) (actual time=104.800..104.800 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6438.42..6438.42 rows=2020 width=4) (actual time=31.457..31.457 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.041..30.984 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.051..0.051 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 28.325 ms
 JIT:
   Functions: 37
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.932 ms (Deform 0.854 ms), Inlining 0.000 ms, Optimization 2.988 ms, Emission 50.414 ms, Total 56.335 ms
 Execution Time: 3769.078 ms
(44 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215850.34..215850.34 rows=1 width=51) (actual time=1411.298..1411.302 rows=1 loops=1)
   ->  Sort  (cost=215850.34..215850.34 rows=1 width=51) (actual time=1393.341..1393.344 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=192262.71..215850.33 rows=1 width=51) (actual time=1235.525..1393.147 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.039..1.561 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.023 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.011..0.665 rows=10000 loops=1)
               ->  Materialize  (cost=192262.71..215395.02 rows=1 width=8) (actual time=1.707..2.958 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=192262.71..215395.01 rows=1 width=8) (actual time=747.712..1232.026 rows=5898 loops=1)
                           ->  Hash Join  (cost=192262.29..209759.64 rows=4903 width=44) (actual time=747.665..1212.604 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=185798.62..202021.61 rows=485462 width=40) (actual time=727.212..1156.286 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16444.97..142738.45 rows=915565 width=13) (actual time=88.020..308.788 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16216.08 rows=915565 width=0) (actual time=68.812..68.812 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6438.42..6438.42 rows=2020 width=4) (actual time=20.427..20.427 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.026..20.129 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.626 ms
 JIT:
   Functions: 37
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.028 ms (Deform 0.815 ms), Inlining 0.000 ms, Optimization 1.054 ms, Emission 21.602 ms, Total 24.684 ms
 Execution Time: 1433.986 ms
(44 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100329.09..100329.09 rows=1 width=34) (actual time=3055.050..3055.065 rows=100 loops=1)
   ->  Sort  (cost=100329.09..100329.09 rows=1 width=34) (actual time=3010.584..3010.593 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=100329.06..100329.08 rows=1 width=34) (actual time=3009.586..3010.161 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=100329.06..100329.06 rows=1 width=26) (actual time=3009.547..3009.718 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=50515.50..100329.05 rows=1 width=26) (actual time=1361.291..2995.586 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=50515.07..100326.61 rows=1 width=38) (actual time=1360.630..1856.743 rows=6909 loops=1)
                                 ->  Hash Right Anti Join  (cost=50514.64..100324.25 rows=1 width=34) (actual time=1359.888..1374.792 rows=14289 loops=1)
                                       Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 159195
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..40975.73 rows=2000220 width=8) (actual time=0.040..330.652 rows=3793296 loops=1)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=49514.10..49514.10 rows=80009 width=34) (actual time=687.157..687.160 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=237.88..49514.10 rows=80009 width=34) (actual time=6.884..650.708 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..40975.73 rows=2000220 width=8) (actual time=0.302..412.506 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=6.551..6.552 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=1.408..6.439 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.480..0.482 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.905..5.869 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.568..0.568 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.033..0.033 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.163..0.164 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 26.780 ms
 JIT:
   Functions: 33
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 2.006 ms (Deform 0.421 ms), Inlining 0.000 ms, Optimization 2.404 ms, Emission 42.205 ms, Total 46.615 ms
 Execution Time: 3327.316 ms
(48 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100329.09..100329.09 rows=1 width=34) (actual time=1375.417..1375.432 rows=100 loops=1)
   ->  Sort  (cost=100329.09..100329.09 rows=1 width=34) (actual time=1360.713..1360.721 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=100329.06..100329.08 rows=1 width=34) (actual time=1359.719..1360.292 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=100329.06..100329.06 rows=1 width=26) (actual time=1359.686..1359.856 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=50515.50..100329.05 rows=1 width=26) (actual time=1284.719..1347.690 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=50515.07..100326.61 rows=1 width=38) (actual time=1284.697..1326.970 rows=6909 loops=1)
                                 ->  Hash Right Anti Join  (cost=50514.64..100324.25 rows=1 width=34) (actual time=1284.652..1291.234 rows=14289 loops=1)
                                       Hash Cond: (l3.l_orderkey = l1.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 159195
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..40975.73 rows=2000220 width=8) (actual time=0.041..331.628 rows=3793296 loops=1)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=49514.10..49514.10 rows=80009 width=34) (actual time=597.790..597.793 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=237.88..49514.10 rows=80009 width=34) (actual time=0.475..565.517 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..40975.73 rows=2000220 width=8) (actual time=0.022..337.930 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=232.45..232.45 rows=400 width=30) (actual time=0.434..0.436 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=5.38..232.45 rows=400 width=30) (actual time=0.075..0.381 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=5.38..227.14 rows=400 width=34) (actual time=0.048..0.307 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..5.29 rows=400 width=0) (actual time=0.023..0.023 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.324 ms
 JIT:
   Functions: 33
   Options: Inlining false, Optimization false, Expressions true, Deforming true
   Timing: Generation 1.301 ms (Deform 0.408 ms), Inlining 0.000 ms, Optimization 0.437 ms, Emission 14.361 ms, Total 16.099 ms
 Execution Time: 1392.168 ms
(48 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16133.89..16133.92 rows=1 width=72) (actual time=182.442..182.444 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7546.42..7546.43 rows=1 width=32) (actual time=86.626..86.626 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4769 width=6) (actual time=0.025..83.443 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8587.46..8607.23 rows=719 width=72) (actual time=182.441..182.442 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8587.46..8589.26 rows=719 width=38) (actual time=182.254..182.290 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 392kB
               ->  Nested Loop Anti Join  (cost=0.43..8553.34 rows=719 width=38) (actual time=87.154..180.225 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=87.123..136.510 rows=19077 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 15.091 ms
 Execution Time: 183.342 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16133.89..16133.92 rows=1 width=72) (actual time=148.275..148.276 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7546.42..7546.43 rows=1 width=32) (actual time=68.832..68.833 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4769 width=6) (actual time=0.011..65.494 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8587.46..8607.23 rows=719 width=72) (actual time=148.274..148.274 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8587.46..8589.26 rows=719 width=38) (actual time=148.088..148.125 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 392kB
               ->  Nested Loop Anti Join  (cost=0.43..8553.34 rows=719 width=38) (actual time=68.887..146.268 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=68.857..115.390 rows=19077 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 1.074 ms
 Execution Time: 148.406 ms
(20 rows)

